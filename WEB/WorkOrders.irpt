<!DOCTYPE html >
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>CT MODULE</title>
<style>
body { /
	background-image: url("Common/img/logo.png");
	background-size: 180px;
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-position: right 40px top 30px;
	font-family: Arial;
}

#app_header {
	padding: 10px;
	padding-left: 40px;
	padding-top: 15px;
	padding-bottom: 0px;
	height: 80px;
	width: 400px;
	text-align: center;
}

#app_title {
	width: 400px;
	text-align: center;
	font-family: "Arial Black", Arial, Helvetica, sans-serif;
	font-size: 32px;
	color: #007dc0;
	margin-bottom;
	20
	px;
}

#app_menu {
	width: 400px;
	text-align: center;
	font-family: Arial, Helvetica, sans-serif;
}

#page_title {
	width: 400px;
	text-align: center;
	font-family: "Arial Black", Arial, Helvetica, sans-serif;
	font-size: 28px;
	color: #cfcfcf;
}

#OEEM_content {
	margin: 0 auto;
	min-width: 700px;
	width: 95%;
	position: relative;
}

#OEEM_content2 {
	margin: 0 auto;
	min-width: 700px;
	width: 95%;
	position: relative;
}

#__button0, #__button1, #__button2 {
	margin-top: 10px;
	margin-left: 5px;
	margin-right: 5px;
}

#MatrixT, #MatrixB {
	margin: 10px auto;
}

#B-Add, #B-Edit, #B-Delete, #B-MvUp, #B-MvDn {
	width: 100px;
	height: 35px;
	font-size: 14px;
}

#__cell2, #__cell3, #__cell4, #__cell5, #__cell6 {
	text-align: center;
}

#__cell8, #__cell18, #__cell19, #__cell29 {
	text-align: center;
	height: 36px;
}

#__cell9, #__cell11, #__cell13, #__cell15, #__cell20, #__cell22,
	#__cell24, #__cell26 {
	padding: 10px;
	padding-right: 20px;
	text-align: right;
}

#L-AddLevel, #L-EditLevel {
	margin-top: 15px;
	padding: 5px;
	font-family: "Arial Black", Arial, Helvetica, sans-serif;
	font-size: 32px;
	height: 35px;
	color: #007dc0;
}

#B-AddLevel, #B-EditLevel {
	width: 100px;
	height: 35px;
	font-size: 14px;
}

#input_desc, #input_desce {
	width: 250px;
}
</style>



<script id="sap-ui-bootstrap" src="/sapui5/resources/sap-ui-core.js"
	data-sap-ui-theme="sap_bluecrystal"
	data-sap-ui-libs="sap.m, sap.ui.core, sap.ui.commons, sap.ui.table, sap.ui.ux3, sap.viz"
	data-sap-ui-language="en">
	
</script>
<script src="https://code.highcharts.com/stock/highstock.js"></script>


<script type="text/javascript" src="Common/js/default.js"></script>

<script type="text/javascript" id="app-init">
	// ******************************************************************************************************************************************************************
	// Get Core SAP UI5
	var oCore = sap.ui.getCore();
	// Initialize screen
	//var nrRows = 13;
	var selectedIndex = -1;
	// ******************************************************************************************************************************************************************
	// initialize access
	var level2Access = "";
	var plant2Access = "";
	// Initialize screen
	var selectedPlant = 0;
	//var nrRows = 13;
	var recordID = "";
	var typeName = "";
	var typeDescription = "";
	var idUnitParent = "";
	var typeActive = "";
	var typeACT_src = "";
	var sortOrder = "";
	var minSortID = "";
	var maxSortID = "";
	var typeCreatedBy = "";
	var typeCreatedOn = "";
	var typeModifiedBy = "";
	var typeModifiedOn = "";
	var mModelXML = new sap.ui.model.xml.XMLModel();
	var _userNAME = "Unknow";

	var oeePanel = new sap.m.Panel("oeePanel", {
		width : "100%",
		height : "500px"
	});
	oeePanel.placeAt('OEEM_content2');

	$(function() {
		var seriesOptions = [];
		function createChart() {

			$('#oeePanel').highcharts('StockChart', {
				legend : {
					enabled : true,
					align : "center",
					verticalAlign : "//",
					shadow : false,
				},
				rangeSelector : {
					buttons : [ {
						type : 'day',
						count : 1,
						text : '1d'
					}, {
						type : 'week',
						count : 1,
						text : '1w'
					}, {
						type : 'month',
						count : 1,
						text : '1m'
					}, {
						type : 'year',
						count : 1,
						text : '1y'
					}, {
						type : 'all',
						text : 'All'
					} ],
					selected : 2
				},

				yAxis : {
					labels : {
						formatter : function() {
							return (this.value > 0 ? ' + ' : '') + this.value + '%';
						}
					},
					plotLines : [ {
						value : 0,
						width : 2,
						color : 'silver'
					} ]
				},
				tooltip : {
					pointFormat : '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> (%)<br/>',
					valueDecimals : 2,
					split : true
				},

				series : seriesOptions
			});
		}
		var dt = 3600 * 1000;
		var mm = (34560000000 / 3600000) | 0;
		var _oee = new Array(mm);
		function loadData(i) {
			var dd = new Array(mm);
			d0 = (new Date().getTime() - 34560000000);

			for (n = 0; n < mm; n++) {

				dd[n] = new Array(2);
				if (n == 0) {
					dd[n][0] = d0;
				} else {
					dd[n][0] = dd[n - 1][0] + dt;
				}
				dd[n][1] = 90 + 10 * Math.random();
				if (i == 0) {
					_oee[n] = new Array(2);
					_oee[n][0] = dd[n][0];
					_oee[n][1] = dd[n][1];
				} else if (i == 1 | i == 2) {
					_oee[n][1] = _oee[n][1] * dd[n][1] / 100;
				}
			}
			return dd;
		}
		seriesOptions[0] = {
			name : "Availability",
			data : loadData(0)
		};
		seriesOptions[1] = {
			name : "Performance",
			data : loadData(1)
		};
		seriesOptions[2] = {
			name : "Quality",
			data : loadData(2)
		};
		seriesOptions[3] = {
			name : "OEE",
			data : _oee
		};
		createChart();

	});

	// ****************************************************************************************************************************************************
	function roleSecurity() {
		_userNAME = document.getElementById("user_name").value;
		var myRoles = document.getElementById("user_roles").value;
		var role2Access = "OEEM_" + document.getElementById("user_role").value;
		// alert(role2Access);

		if (myRoles.indexOf(role2Access) < 0) {// security check
			window.location.assign("security.irpt");
			return true;
		}

		//alert(document.getElementById("OEEM_content").clientWidth);

		var roleString = document.getElementById("user_role").value;
		var roleArray = roleString.split("_");
		level2Access = roleArray[0];
		plant2Access = roleArray[1];

		StopReasons_Table();
		mTable.attachRowSelectionChange(selectStopReasonsTable);
		FloorMaps_Tree();

		//**************************

		// 			var _Data = [];

		// 			for (var c = 1; c < 15; c++) {
		// 				_Data.push({
		// 					day : "DAY " + c,
		// 					Availability : 30 + 65 * Math.random(),
		// 					Performance : 30 + 65 * Math.random(),
		// 					Quality : 30 + 65 * Math.random(),
		// 					OEE : 30 + 65 * Math.random(),
		// 				});
		// 			}
		// 			jsonModel = new sap.ui.model.json.JSONModel({
		// 				chartData : _Data
		// 			});

		// 			// A Dataset defines how the model data is mapped to the chart 
		// 			var chartDataset = new sap.viz.ui5.data.FlattenedDataset({

		// 				// a Bar Chart requires exactly one dimension (x-axis) 
		// 				dimensions : [ {
		// 					axis : 1, // must be one for the x-axis, 2 for y-axis
		// 					name : 'day',
		// 					value : "{day}"
		// 				} ],

		// 				// it can show multiple measures, each results in a new set of bars in a new color 
		// 				measures : [
		// 				// measure 1
		// 				{
		// 					name : 'Availability', // 'name' is used as label in the Legend 
		// 					value : '{Availability}' // 'value' defines the binding for the displayed value   
		// 				}, {
		// 					name : 'Performance',
		// 					value : '{Performance}'
		// 				}, {
		// 					name : 'Quality',
		// 					value : '{Quality}'
		// 				}, {
		// 					name : 'OEE',
		// 					value : '{OEE}'
		// 				} ],

		// 				// 'data' is used to bind the whole data collection that is to be displayed in the chart 
		// 				data : {
		// 					path : "/chartData"
		// 				}

		// 			});

		// 			// create a Line chart
		// 			// you also might use Combination, Line, StackedColumn100, StackedColumn or Column
		// 			// for Donut and Pie please remove one of the two measures in the above Dataset.  
		// 			var chartLine = new sap.viz.ui5.Line({
		// 				width : "100%",
		// 				height : "250px",
		// 				plotArea : {
		// 				//'colorPalette' : d3.scale.category20().range()
		// 				},
		// 				title : {
		// 					visible : true,
		// 					text : 'OEE Dashboards'
		// 				},
		// 				dataset : chartDataset
		// 			});
		// 			chartLine.setModel(jsonModel);

		//*************************

		//panel.placeAt('container');
		updateParents();
		updateParentsE();
		// 		document.getElementById("page_title").innerHTML = role2Access;
		menuSetting(role2Access, plant2Access);//menu buttons

		var xMatrixLayout = new sap.ui.commons.layout.MatrixLayout({
			id : "matrix2",
			layoutFixed : true,
			columns : 1,
			width : "auto",
			widths : [ "100%" ]
		});

		xMatrixLayout.createRow({
			height : "600px"
		}, mTable);
		// 			new sap.m.Button
		// 			bt = new sap.m.Button({
		// 				text : "test"
		// 			})

		// 			xMatrixLayout.createRow({
		// 				height : "250px"
		// 			}, chartLine);

		// attach it to some element in the page
		//oLayout.placeAt("OEEM_content");

		(new sap.m.Toolbar({
			height : "320px",
			width : "100%",
			//				content : [ treeFloorMaps, xMatrixLayout ]
			//			content : [ treeFloorMaps, mTable ]
			content : [ mTable ]
		})).placeAt('OEEM_content');
		//oMatrixB.placeAt('OEEM_content');

	}

	var StopReasons_recordID;

	function selectStopReasonsTable(oEvent) {
		StopReasons_recordID = mTable.getModel().getProperty("recordID", oEvent.getParameter("rowContext"));
		//alert(StopReasons_recordID);
		// 		_OperationID = null;
		// 		_OperationName = null;
		// 		_OperationPos = null;
		// 		_MissionID_2 = null;
		// 		_CreatedBy_2 = null;
		// 		_CreatedOn_2 = null;

		// 		if (tbMissions.getSelectedIndex() < 0) {
		// 			tbOperations.filter(tbOperations.getColumns()[3], "");

		// 			refreshBtn();
		// 			return -1;
		// 		}
		// 		selectedIndex_tbMissions = tbMissions.getSelectedIndex();
		// 		//selectedIndex_tbOperations = -1;
		// 		_MissionID = tbMissions.getModel().getProperty("MissionID", oEvent.getParameter("rowContext"));
		// 		_MissionName = tbMissions.getModel().getProperty("MissionName", oEvent.getParameter("rowContext"));
		// 		_MissionPlantID = tbMissions.getModel().getProperty("MissionPlantID", oEvent.getParameter("rowContext"));
		// 		_MissionInterval = tbMissions.getModel().getProperty("MissionInterval", oEvent.getParameter("rowContext"));
		// 		_MissionStatus = tbMissions.getModel().getProperty("MissionStatus", oEvent.getParameter("rowContext"));
		// 		_CreatedBy = tbMissions.getModel().getProperty("CreatedBy", oEvent.getParameter("rowContext"));
		// 		_CreatedOn = tbMissions.getModel().getProperty("CreatedOn", oEvent.getParameter("rowContext"));
		// 		tbOperations.filter(tbOperations.getColumns()[3], _MissionID);

		// 		//refresh pFlow if tbMissions has selected
		// 		ProcessFlowlanes = [];
		// 		ProcessFlownodes = [];
		// 		positionProcessFlow = 0;

		// 		refreshProcessFlow = true;
		// 		refreshBtn();
		// 		if (tbOperations.getSelectedIndex() != 0) {
		// 			tbOperations.setSelectedIndex(0);
		// 		} else {
		// 			tbOperations.setSelectedIndex(-1);
		// 			tbOperations.setSelectedIndex(0);
		// 		}
	}

	var FloorMaps_Data;
	var FloorMaps_Index;
	var treeFloorMaps = new sap.ui.commons.Tree("tree", {
		title : "FloorMaps",
		width : "200px",
		height : "340px",
		showHeaderIcons : true,
		showHorizontalScrollbar : true,
		showHeader : true,
		select : function(oControlEvent) {
			//s = oControlEvent.getParameters().node.getId();
			//n = oControlEvent.getParameters().node.getId().indexOf("_");
			//s.substring(n+1);
			FloorMaps_Index = parseInt(oControlEvent.getParameters().node.getId().substring(
					oControlEvent.getParameters().node.getId().indexOf("_") + 1));
			mTable.filter(mTable.getColumns()[3], FloorMaps_Data[FloorMaps_Index]['recordID']);
			//alert(FloorMaps_Data[FloorMaps_Index]['unitName']);
		}
	});

	// ******************************************************************************************************************************************************************
	function FloorMaps_Tree() {
		Param1 = "MESM_FloorMaps";
		Param2 = "idUnitParent";
		getData("/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + Param1 + "&Param.2=" + Param2
				+ "&Content-Type=text/xml", parseJsonParent);

		function parseJsonParent(jsondata) {
			FloorMaps_Data = [];
			_Node = new Array(jsondata.length);
			for (var i = 0; i < jsondata.length; i++) {
				FloorMaps_Data.push({
					unitName : jsondata[i]['unitName'],
					recordID : jsondata[i]['recordID'],
					unitType : jsondata[i]['unitType'],
					idUnitParent : jsondata[i]['idUnitParent'],
				});
				_icon = "";
				// 				if (FloorMaps_Data[i]['unitType'] == "4") {
				// 					_icon = "sap-icon://world";
				// 				}
				// 				if (FloorMaps_Data[i]['unitType'] == "6") {
				// 					_icon = "sap-icon://line-chart";
				// 				}
				_Node[i] = new sap.ui.commons.TreeNode("FloorMaps_" + i, {
					text : jsondata[i]['unitName'],
					icon : _icon,
					expanded : true
				});
				treeFloorMaps.addNode(_Node[i]);
			}

			for (var i = 0; i < jsondata.length - 1; i++) {
				for (var j = i + 1; j < jsondata.length; j++) {
					if (FloorMaps_Data[j]['idUnitParent'] == FloorMaps_Data[i]['recordID']) {
						_Node[i].addNode(_Node[j]);
					}
				}
			}

		}
	}

	//******************************************
	// new sap.ui.commons.Tree(sId?, mSettings?)
	// Properties
	// title : string
	// width : sap.ui.core.CSSSize (default: auto)
	// height : sap.ui.core.CSSSize (default: auto)
	// showHeader : boolean (default: true)
	// showHeaderIcons : boolean (default: true)
	// showHorizontalScrollbar : boolean (default: false)
	// minWidth : sap.ui.core.CSSSize
	// selectionMode : sap.ui.commons.TreeSelectionMode (default: Legacy)
	// Aggregations
	// nodes : sap.ui.commons.TreeNode[] (default)
	// Events
	// select : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]
	// selectionChange : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]	

	// ****************************************************************************************************************************************************
	// 	function updateTableLevels() {
	// 		oTable.clearSelection();
	// 		var timestamp = new Date().getTime();
	// 		oModel.loadData("/XMII/Illuminator?QueryTemplate=OEEM/LEVELS/QUERIES/get_Levels&ts=" + timestamp + "&Content-Type=text/xml", "", false);
	// 		oTable.getModel().refresh(true);
	// 	};
	// ****************************************************************************************************************************************************
	// 	function createColumnsLevels() {
	// 		//Define the columns and the control templates to be used
	// 		oTable.addColumn(new sap.ui.table.Column({
	// 			label : new sap.ui.commons.Label({
	// 				text : " NAME"
	// 			}),
	// 			template : new sap.ui.commons.TextView().bindProperty("text", "typeName"),
	// 			sortProperty : "typeName",
	// 			filterProperty : "typeName",
	// 			width : "150px"
	// 		}));
	// 		oTable.addColumn(new sap.ui.table.Column({
	// 			label : new sap.ui.commons.Label({
	// 				text : "DESCRIPTION"
	// 			}),
	// 			template : new sap.ui.commons.TextView().bindProperty("text", "typeDescription"),
	// 			sortProperty : "typeDescription",
	// 			filterProperty : "typeDescription",
	// 			width : "350px"
	// 		}));
	// 		oTable.addColumn(new sap.ui.table.Column({
	// 			label : new sap.ui.commons.Label({
	// 				text : "MODIFIED BY"
	// 			}),
	// 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedBy"),
	// 			sortProperty : "ModifiedBy",
	// 			filterProperty : "ModifiedBy",
	// 			width : "100px"
	// 		}));
	// 		oTable.addColumn(new sap.ui.table.Column({
	// 			label : new sap.ui.commons.Label({
	// 				text : "MODIFIED ON"
	// 			}),
	// 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedOn"),
	// 			sortProperty : "ModifiedOn",
	// 			filterProperty : "ModifiedOn",
	// 			width : "150px"
	// 		}));
	// 		oTable.addColumn(new sap.ui.table.Column({
	// 			label : new sap.ui.commons.Label({
	// 				text : "CREATED BY"
	// 			}),
	// 			template : new sap.ui.commons.TextView().bindProperty("text", "CreatedBy"),
	// 			sortProperty : "CreatedBy",
	// 			filterProperty : "CreatedBy",
	// 			width : "100px"
	// 		}));
	// 		oTable.addColumn(new sap.ui.table.Column({
	// 			label : new sap.ui.commons.Label({
	// 				text : "CREATED ON"
	// 			}),
	// 			template : new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
	// 			sortProperty : "CreatedOn",
	// 			filterProperty : "CreatedOn",
	// 			width : "150px"
	// 		}));
	// 		oTable.addColumn(new sap.ui.table.Column({
	// 			label : new sap.ui.commons.Label({
	// 				text : "ACTIVE"
	// 			}),
	// 			template : new sap.ui.commons.Image().bindProperty("src", "src"),
	// 			width : "75px",
	// 			hAlign : "Center"
	// 		}));
	// 	};
	// ****************************************************************************************************************************************************
	//	var oMatrixT = new sap.ui.commons.layout.MatrixLayout({
	//		id : 'MatrixT',
	//		layoutFixed : true,
	//		width: '1200px',
	//		columns : 1,
	//		widths : ['1200px'] 
	//	});

	//Create an instance of the table control
	// 	var oTable = new sap.ui.table.Table({
	// 		visibleRowCount : nrRows,
	// 		visibleRowCountMode : sap.ui.table.VisibleRowCountMode.Interactive,
	// 		firstVisibleRow : 0,
	// 		width : "1200px",
	// 		selectionBehavior : sap.ui.table.SelectionBehavior.Row,
	// 		selectionMode : sap.ui.table.SelectionMode.Single
	// 	});

	// ******************************************************************************************************************************************************************
	// 	oTable.attachRowSelectionChange(function(oEvent) {
	// 		// Retrieve the selected row
	// 		var selIndex = oTable.getSelectedIndex();
	// 		selectedIndex = selIndex;
	// 		if (selIndex >= 0) {
	// 			// Retrieve the selected row
	// 			var selectedRow = oTable.getRows()[selIndex];
	// 			// sap.ui.commons.MessageBox.alert(selectedRow);
	// 			var selectedRowContext = oEvent.getParameter("rowContext");
	// 			recordID = oModel.getProperty("recordID", selectedRowContext);

	// 			typeName = oModel.getProperty("typeName", selectedRowContext);
	// 			typeDescription = oModel.getProperty("typeDescription", selectedRowContext);
	// 			idUnitParent = oModel.getProperty("idUnitParent", selectedRowContext);
	// 			typeActive = oModel.getProperty("typeActive", selectedRowContext);
	// 			typeACT_src = oModel.getProperty("src", selectedRowContext);
	// 			sortOrder = oModel.getProperty("sortOrder", selectedRowContext);
	// 			minSortID = oModel.getProperty("minSortID", selectedRowContext);
	// 			maxSortID = oModel.getProperty("maxSortID", selectedRowContext);
	// 			typeCreatedBy = oModel.getProperty("CreatedBy", selectedRowContext);
	// 			typeCreatedOn = oModel.getProperty("CreatedOn", selectedRowContext);
	// 			typeModifiedBy = oModel.getProperty("ModifiedBy", selectedRowContext);
	// 			typeModifiedOn = oModel.getProperty("ModifiedOn", selectedRowContext);
	// 			// alert ("Plant " + plantSAP_ID + " selected");
	// 			oButton1.setEnabled(false);
	// 			oButton2.setEnabled(true);
	// 			oButton3.setEnabled(true);
	// 			if (sortOrder > minSortID)
	// 				oButton4.setEnabled(true);
	// 			else
	// 				oButton4.setEnabled(false);
	// 			if (sortOrder < maxSortID)
	// 				oButton5.setEnabled(true);
	// 			else
	// 				oButton5.setEnabled(false);
	// 			// update parents
	// 			updateParents();
	// 			updateParentsE();
	// 		} else {
	// 			oButton1.setEnabled(true);
	// 			oButton2.setEnabled(false);
	// 			oButton3.setEnabled(false);
	// 			oButton4.setEnabled(false);
	// 			oButton5.setEnabled(false);
	// 			selectedIndex = -1;
	// 			recordID = "";
	// 			typeName = "";
	// 			typeDescription = "";
	// 			idUnitParent = "";
	// 			typeActive = "";
	// 			typeACT_src = "";
	// 			sortOrder = "";
	// 			typeCreatedBy = "";
	// 			typeCreatedOn = "";
	// 			typeModifiedBy = "";
	// 			typeModifiedOn = "";
	// 			// update parents
	// 			updateParents();
	// 			updateParentsE();
	// 		}
	// 	});

	//	var oModel = new sap.ui.model.xml.XMLModel();

	//Bring the table onto the UI 
	//	oMatrixT.createRow(oTable);
	// ******************************************************************************************************************************************************************
	// 	var oMatrixB = new sap.ui.commons.layout.MatrixLayout({
	// 		id : 'MatrixB',
	// 		layoutFixed : true,
	// 		width : '1200px',
	// 		columns : 7,
	// 		widths : [ '225px', '150px', '150px', '150px', '150px', '150px', '225px' ]
	// 	});

	// 	var oButton1 = new sap.ui.commons.Button({
	// 		id : 'B-Add',
	// 		text : 'Add',
	// 		enabled : true
	// 	});
	// 	oButton1.attachPress(doAdd);
	// 	var oButton2 = new sap.ui.commons.Button({
	// 		id : 'B-Edit',
	// 		text : 'Edit',
	// 		enabled : false
	// 	});
	// 	oButton2.attachPress(doEdit);
	// 	var oButton3 = new sap.ui.commons.Button({
	// 		id : 'B-Delete',
	// 		text : 'Delete',
	// 		enabled : false
	// 	});
	// 	oButton3.attachPress(doDelete);
	// 	var oButton4 = new sap.ui.commons.Button({
	// 		id : 'B-MvUp',
	// 		text : 'Move Up',
	// 		enabled : false
	// 	});
	// 	oButton4.attachPress(doMvUp);
	// 	var oButton5 = new sap.ui.commons.Button({
	// 		id : 'B-MvDn',
	// 		text : 'Move Down',
	// 		enabled : false
	// 	});
	// 	oButton5.attachPress(doMvDn);
	//oMatrixB.createRow('', oButton1, oButton2, oButton3, oButton4, oButton5, '');
	// ******************************************************************************************************************************************************************
	// Create Add Overlay
	var oMatrixA = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixA',
		layoutFixed : true,
		width : '690px',
		columns : 1,
		widths : [ '700px' ]
	});

	var oMatrixAF = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixAF',
		layoutFixed : true,
		width : '690px',
		columns : 2,
		widths : [ '295px', '385px' ]
	});

	var oTitleA = new sap.ui.commons.Label({
		id : 'L-AddLevel',
		text : 'ADD HIERARCHY LEVEL'
	});
	oMatrixA.createRow(oTitleA);

	var oLabel_NAME = new sap.ui.commons.Label({
		id : 'L-NAME',
		text : ' NAME'
	});

	var oInput_NAME = new sap.ui.commons.TextField('input_name');

	oMatrixAF.createRow(oLabel_NAME, oInput_NAME);

	var oLabel_DESC = new sap.ui.commons.Label({
		id : 'L-DESC',
		text : ' DESCRIPTION'
	});

	var oInput_DESC = new sap.ui.commons.TextField('input_desc');

	oMatrixAF.createRow(oLabel_DESC, oInput_DESC);

	var oLabel_PARENT = new sap.ui.commons.Label({
		id : 'L-PARENT',
		visible : true,
		text : 'PARENT UNIT'
	});

	var oDropdownBox_PARENT = new sap.ui.commons.DropdownBox({
		id : "dbox_parent",
		tooltip : 'Parent Hierarchy',
		editable : true,
		width : '230px',
		change : function(oEvent) {
			//alert(oEvent.oSource.getSelectedKey());
		}
	});

	// ****************************************************************************************************************************************************
	function updateParents() {
		var timestamp = new Date().getTime();
		getData("/XMII/Illuminator?QueryTemplate=OEEM/LEVELS/QUERIES/get_Parents&ts=" + timestamp + "&Content-Type=text/xml",
				parseJsonParent);

		function parseJsonParent(jsondata) {
			oDropdownBox_PARENT.destroyItems();
			for (var i = 0; i < jsondata.length; i++) {
				//alert(jsondata[i]['recordID'] + '   ' + jsondata[i]['unitParentName']);
				item_key = jsondata[i]['recordID'];
				item_text = jsondata[i]['typeName'];
				oItem = new sap.ui.core.ListItem({
					key : item_key,
					text : item_text
				});
				oItem.setAdditionalText(jsondata[i]['idUnitParent']);
				oDropdownBox_PARENT.addItem(oItem);
			}
		}
	}
	// ****************************************************************************************************************************************************
	function getSelectedIDUnitParent() {
		var aItems = oDropdownBox_PARENT.getItems();
		for (var i = 0; i < aItems.length; i++) {
			if (aItems[i].getText() === oDropdownBox_PARENT.getValue()) {
				return oDropdownBox_PARENT.getItems()[i].getAdditionalText();
			}
		}
	}
	// ****************************************************************************************************************************************************

	oMatrixAF.createRow(oLabel_PARENT, oDropdownBox_PARENT);

	var oLabel_ACTIVE = new sap.ui.commons.Label({
		id : 'L-ACTIVE',
		text : ' ACTIVE'
	});

	var oCheckbox_ACTIVE = new sap.ui.commons.CheckBox('checkbox_active', {
		checked : false
	});

	oMatrixAF.createRow(oLabel_ACTIVE, oCheckbox_ACTIVE);

	oMatrixA.createRow(oMatrixAF);

	var oButton6 = new sap.ui.commons.Button({
		id : 'B-AddLevel',
		text : 'SUBMIT',
		enabled : true
	});
	oButton6.attachPress(doAddLevel);

	oMatrixA.createRow(oButton6);

	var oOverlayContainerAdd = new sap.ui.ux3.OverlayDialog({
		openButtonVisible : false
	});
	oOverlayContainerAdd.setHeight('300px');
	oOverlayContainerAdd.setWidth('700px');
	oOverlayContainerAdd.addContent(oMatrixA);
	// ******************************************************************************************************************************************************************
	function doAdd() {
		if (!oOverlayContainerAdd.isOpen()) {
			//updateParents();
			oCore.byId("input_name").setValue("");
			oCore.byId("input_desc").setValue("");
			oCore.byId("dbox_parent").setSelectedKey(0);
			oCore.byId("checkbox_active").setChecked(false);
			oOverlayContainerAdd.open();
		}
	};
	// ******************************************************************************************************************************************************************
	function doAddLevel() {
		// retrieve values
		var input_NAME = oCore.byId("input_name").getValue();
		var input_DESC = oCore.byId("input_desc").getValue();
		var input_IDPARENT = oCore.byId("dbox_parent").getSelectedKey();
		var input_userNAME = document.getElementById("user_name").value;
		if (oCore.byId("checkbox_active").getChecked()) {
			var input_ACTIVE = 1;
		} else {
			var input_ACTIVE = 0;
		}
		if (input_NAME == "") {
			alert("Please Input Level Name ..");
			oCore.byId("input_name").focus();
		} else {
			if (input_DESC == "") {
				alert("Please Input Level Description ..");
				oCore.byId("input_desc").focus();
			} else {
				if (input_IDPARENT == "") {
					alert("Please Select Parent ..");
					oCore.byId("dbox_parent").focus();
				} else {
					// all good. Try to write them ..
					var Param1 = escapeSQLString(input_NAME);
					var Param2 = escapeSQLString(input_DESC);
					var Param3 = escapeSQLString(input_IDPARENT);
					var Param4 = escapeSQLString(input_ACTIVE);
					var Param5 = escapeSQLString(input_userNAME);
					var oReqData;
					if (window.XMLHttpRequest) {
						oReqData = new XMLHttpRequest();
					}
					if (oReqData != null) {
						var timestamp = new Date().getTime();
						var paramStr = "Param.1=" + encodeURIComponent(Param1) + "&Param.2=" + encodeURIComponent(Param2) + "&Param.3="
								+ encodeURIComponent(Param3) + "&Param.4=" + encodeURIComponent(Param4) + "&Param.5="
								+ encodeURIComponent(Param5);
						// alert(paramStr);
						var queryStr = "/XMII/Illuminator?QueryTemplate=OEEM/LEVELS/QUERIES/add_Level&" + paramStr + "&ts=" + timestamp
								+ "&Content-Type=text/xml";
						// alert(queryStr);
						oReqData.open("GET", queryStr, true);
						oReqData.onreadystatechange = function() {
							if (oReqData.readyState == 4)
								if (oReqData.status == 200) {
									// Successful -- rebuild the screen
									updateTableLevels();
									oOverlayContainerAdd.close();
									// update parents
									updateParents();
									updateParentsE();
								} else {
									// Not Successful -- alert the user
									alert("Error: " + oReqData.statusText);
								}
						}
						oReqData.send();
					} else {
						window.alert("Error creating XmlHttpRequest object.");
					}
				}
			}
		}
	};
	// ******************************************************************************************************************************************************************
	// Create Edit Overlay
	var oMatrixE = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixE',
		layoutFixed : true,
		width : '690px',
		columns : 1,
		widths : [ '700px' ]
	});

	var oMatrixEF = new sap.ui.commons.layout.MatrixLayout({
		id : 'MatrixEF',
		layoutFixed : true,
		width : '690px',
		columns : 2,
		widths : [ '295px', '385px' ]
	});

	var oTitleE = new sap.ui.commons.Label({
		id : 'L-EditLevel',
		text : 'EDIT HIERARCHY LEVEL'
	});
	oMatrixE.createRow(oTitleE);

	var oLabel_NAMEE = new sap.ui.commons.Label({
		id : 'L-NAMEE',
		text : ' NAME'
	});

	var oInput_NAMEE = new sap.ui.commons.TextField('input_namee');

	oMatrixEF.createRow(oLabel_NAMEE, oInput_NAMEE);

	var oLabel_DESCE = new sap.ui.commons.Label({
		id : 'L-DESCE',
		text : ' DESCRIPTION'
	});

	var oInput_DESCE = new sap.ui.commons.TextField('input_desce');

	oMatrixEF.createRow(oLabel_DESCE, oInput_DESCE);

	var oLabel_PARENTE = new sap.ui.commons.Label({
		id : 'L-PARENTE',
		visible : true,
		text : 'PARENT UNIT'
	});

	var oDropdownBox_PARENTE = new sap.ui.commons.DropdownBox({
		id : "dbox_parente",
		tooltip : 'Parent Hierarchy',
		editable : true,
		width : '230px',
		change : function(oEvent) {
			//alert(oEvent.oSource.getSelectedKey());
		}
	});

	// ****************************************************************************************************************************************************
	function updateParentsE() {
		var timestamp = new Date().getTime();
		getData("/XMII/Illuminator?QueryTemplate=OEEM/LEVELS/QUERIES/get_Parents&ts=" + timestamp + "&Content-Type=text/xml",
				parseJsonParent);

		function parseJsonParent(jsondata) {
			oDropdownBox_PARENTE.destroyItems();
			for (var i = 0; i < jsondata.length; i++) {
				//alert(jsondata[i]['recordID'] + '   ' + jsondata[i]['unitParentName']);
				item_key = jsondata[i]['recordID'];
				item_text = jsondata[i]['typeName'];
				oItem = new sap.ui.core.ListItem({
					key : item_key,
					text : item_text
				});
				oDropdownBox_PARENTE.addItem(oItem);
			}
		}
	}
	// ****************************************************************************************************************************************************
	function getSelectedIDUnitParentE() {
		var aItems = oDropdownBox_PARENTE.getItems();
		for (var i = 0; i < aItems.length; i++) {
			if (aItems[i].getText() === oDropdownBox_PARENTE.getValue()) {
				return oDropdownBox_PARENTE.getItems()[i].getAdditionalText();
			}
		}
	}
	// ****************************************************************************************************************************************************

	oMatrixEF.createRow(oLabel_PARENTE, oDropdownBox_PARENTE);

	var oLabel_ACTIVEE = new sap.ui.commons.Label({
		id : 'L-ACTIVEE',
		text : ' ACTIVE'
	});

	var oCheckbox_ACTIVEE = new sap.ui.commons.CheckBox('checkbox_activee', {
		checked : false
	});

	oMatrixEF.createRow(oLabel_ACTIVEE, oCheckbox_ACTIVEE);

	oMatrixE.createRow(oMatrixEF);

	var oButton7 = new sap.ui.commons.Button({
		id : 'B-EditLevel',
		text : 'SUBMIT',
		enabled : true
	});
	oButton7.attachPress(doEditLevel);

	oMatrixE.createRow(oButton7);

	var oOverlayContainerEdit = new sap.ui.ux3.OverlayDialog({
		openButtonVisible : false
	});
	oOverlayContainerEdit.setHeight('300px');
	oOverlayContainerEdit.setWidth('700px');
	oOverlayContainerEdit.addContent(oMatrixE);
	// ******************************************************************************************************************************************************************
	function doEdit() {
		if (!oOverlayContainerEdit.isOpen()) {
			oCore.byId("input_namee").setValue(typeName);
			oCore.byId("input_desce").setValue(typeDescription);
			oCore.byId("dbox_parente").setSelectedKey(idUnitParent);
			if (typeActive == 1)
				oCore.byId("checkbox_activee").setChecked(true);
			else
				oCore.byId("checkbox_activee").setChecked(false);
			oOverlayContainerEdit.open();
		}
	};
	// ******************************************************************************************************************************************************************
	function doEditLevel() {
		// retrieve values
		var input_RECID = recordID;
		var input_NAME = oCore.byId("input_namee").getValue();
		var input_DESC = oCore.byId("input_desce").getValue();
		var input_IDPARENT = oCore.byId("dbox_parente").getSelectedKey();
		var input_userNAME = document.getElementById("user_name").value;
		if (oCore.byId("checkbox_activee").getChecked()) {
			var input_ACTIVE = 1;
		} else {
			var input_ACTIVE = 0;
		}
		if (input_NAME == "") {
			alert("Please Input Level Name ..");
			oCore.byId("input_namee").focus();
		} else {
			if (input_DESC == "") {
				alert("Please Input Level Description ..");
				oCore.byId("input_desce").focus();
			} else {
				if (input_IDPARENT == "") {
					alert("Please Select Parent ..");
					oCore.byId("dbox_parent").focus();
				} else {
					// all good. Try to write them ..
					var Param1 = escapeSQLString(input_RECID);
					var Param2 = escapeSQLString(input_NAME);
					var Param3 = escapeSQLString(input_DESC);
					var Param4 = escapeSQLString(input_IDPARENT);
					var Param5 = escapeSQLString(input_ACTIVE);
					var Param6 = escapeSQLString(input_userNAME);
					var oReqData;
					if (window.XMLHttpRequest) {
						oReqData = new XMLHttpRequest();
					}
					if (oReqData != null) {
						var timestamp = new Date().getTime();
						var paramStr = "Param.1=" + encodeURIComponent(Param1) + "&Param.2=" + encodeURIComponent(Param2) + "&Param.3="
								+ encodeURIComponent(Param3) + "&Param.4=" + encodeURIComponent(Param4) + "&Param.5="
								+ encodeURIComponent(Param5) + "&Param.6=" + encodeURIComponent(Param6);
						// alert(paramStr);
						var queryStr = "/XMII/Illuminator?QueryTemplate=OEEM/LEVELS/QUERIES/upd_Level&" + paramStr + "&ts=" + timestamp
								+ "&Content-Type=text/xml";
						// alert(queryStr);
						oReqData.open("GET", queryStr, true);
						oReqData.onreadystatechange = function() {
							if (oReqData.readyState == 4)
								if (oReqData.status == 200) {
									// Successful -- rebuild the screen
									updateTableLevels();
									oOverlayContainerEdit.close();
									// update parents
									updateParents();
									updateParentsE();
								} else {
									// Not Successful -- alert the user
									alert("Error: " + oReqData.statusText);
								}
						}
						oReqData.send();
					} else {
						window.alert("Error creating XmlHttpRequest object.");
					}
				}
			}
		}
	};
	// ******************************************************************************************************************************************************************
	function doDelete() {
		// retrieve values
		var Param1 = recordID;
		var oReqData;
		if (window.XMLHttpRequest) {
			oReqData = new XMLHttpRequest();
		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1=" + encodeURIComponent(Param1);
			// alert(paramStr);
			var queryStr = "/XMII/Illuminator?QueryTemplate=OEEM/LEVELS/QUERIES/del_Level&" + paramStr + "&ts=" + timestamp
					+ "&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true);
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4)
					if (oReqData.status == 200) {
						//alert(oReqData.responseText);
						var response = oReqData.responseText;
						var sMessage = response.match("<Message>(.*)</Message>");
						if (sMessage != null) {
							// Successful -- rebuild the screen
							updateTableLevels();
							// update parents
							updateParents();
							updateParentsE();
						} else {
							var sError = response.match("<FatalError>(.*)</FatalError>")[1];
							// alert(sError);
							if (sError.indexOf("Violation of PRIMARY KEY contraint") > -1) {
								alert("The record already exists.");
							} else if (sError.indexOf("com.microsoft.sqlserver.jdbc.SQLServerException:") > -1) {
								alert(sError.replace("com.microsoft.sqlserver.jdbc.SQLServerException:", ""));
							} else {
								alert(response.match("<FatalError>(.*)</FatalError>")[1]);
							}
						}
					} else {
						alert("Error: " + oReqData.statusText);
					}
			}
			oReqData.send();
		} else {
			window.alert("Error creating XmlHttpRequest object.");
		}
	};
	// ******************************************************************************************************************************************************************
	function doMvUp() {
		// retrieve values
		var Param1 = recordID;
		var oReqData;
		if (window.XMLHttpRequest) {
			oReqData = new XMLHttpRequest();
		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1=" + encodeURIComponent(Param1);
			// alert(paramStr);
			var queryStr = "/XMII/Illuminator?QueryTemplate=OEEM/LEVELS/QUERIES/mvUp_Level&" + paramStr + "&ts=" + timestamp
					+ "&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true);
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4)
					if (oReqData.status == 200) {
						// Successful -- rebuild the screen
						updateTableLevels();
					} else {
						alert("Error: " + oReqData.statusText);
					}
			}
			oReqData.send();
		} else {
			window.alert("Error creating XmlHttpRequest object.");
		}
	};
	// ******************************************************************************************************************************************************************
	function doMvDn() {
		// retrieve values
		var Param1 = recordID;
		var oReqData;
		if (window.XMLHttpRequest) {
			oReqData = new XMLHttpRequest();
		}
		if (oReqData != null) {
			var timestamp = new Date().getTime();
			var paramStr = "Param.1=" + encodeURIComponent(Param1);
			// alert(paramStr);
			var queryStr = "/XMII/Illuminator?QueryTemplate=OEEM/LEVELS/QUERIES/mvDn_Level&" + paramStr + "&ts=" + timestamp
					+ "&Content-Type=text/xml";
			// alert(queryStr);
			oReqData.open("GET", queryStr, true);
			oReqData.onreadystatechange = function() {
				if (oReqData.readyState == 4)
					if (oReqData.status == 200) {
						// Successful -- rebuild the screen
						updateTableLevels();
					} else {
						alert("Error: " + oReqData.statusText);
					}
			}
			oReqData.send();
		} else {
			window.alert("Error creating XmlHttpRequest object.");
		}
	};

	var oMenuButton1 = new sap.ui.commons.MenuButton({
		text : "Settings",
		icon : "Common/img/map.png"
	});
	var oMenuButton2 = new sap.ui.commons.MenuButton({
		text : "Dashboards",
		icon : "Common/img/cloud.png"
	});
	var oMenuButton3 = new sap.ui.commons.MenuButton({
		text : "Reports",
		icon : "Common/img/list.png"
	});

	// Create the menu
	var oMenu1 = new sap.ui.commons.Menu("menu1", {
		ariaDescription : "Application Setup",
		enabled : true
	});
	// Create the items and add them to the menu
	var oMenuItem1 = new sap.ui.commons.MenuItem("item1-0-1", {
		text : "Enterprise Hierarchy",
		enabled : false
	});
	oMenu1.addItem(oMenuItem1);
	var oMenuItem2 = new sap.ui.commons.MenuItem("item1-0-2", {
		text : " ???",
		enabled : false
	});
	//oMenu1.addItem(oMenuItem2);
	var oMenuItem3 = new sap.ui.commons.MenuItem("item1-0-3", {
		text : "MES Memory Maps",
		enabled : false
	});
	oMenu1.addItem(oMenuItem3);
	var oMenuItem4 = new sap.ui.commons.MenuItem("item1-0-4", {
		text : "Plant Connectivity",
		enabled : false
	});
	oMenu1.addItem(oMenuItem4);
	var oMenuItem5 = new sap.ui.commons.MenuItem("item1-0-5", {
		text : "Master Data Setup",
		enabled : false
	});
	oMenu1.addItem(oMenuItem5);

	var oMenu4 = new sap.ui.commons.Menu("menu4", {
		ariaDescription : "Memory Maps Setup",
		enabled : true
	});
	oMenuItem3.setSubmenu(oMenu4);
	//Create the items and add them to the sub menu
	var oMenuItem41 = new sap.ui.commons.MenuItem("item1-4-1", {
		text : "Memory Map Tags",
		enabled : false
	});
	oMenu4.addItem(oMenuItem41);
	var oMenuItem45 = new sap.ui.commons.MenuItem("item1-4-5", {
		text : "Memory Map Transactions",
		enabled : false
	});
	oMenu4.addItem(oMenuItem45);
	var oMenuItem44 = new sap.ui.commons.MenuItem("item1-4-4", {
		text : "PLC Tag Groups",
		enabled : false
	});
	oMenu4.addItem(oMenuItem44);
	var oMenuItem42 = new sap.ui.commons.MenuItem("item1-4-2", {
		text : "PLC Tag Types",
		enabled : false
	});
	oMenu4.addItem(oMenuItem42);
	var oMenuItem43 = new sap.ui.commons.MenuItem("item1-4-3", {
		text : "PLC Tag Functions",
		enabled : false
	});
	oMenu4.addItem(oMenuItem43);

	var oMenu5 = new sap.ui.commons.Menu("menu5", {
		ariaDescription : "Connectivity Setup",
		enabled : true
	});
	oMenuItem4.setSubmenu(oMenu5);
	//Create the items and add them to the sub menu
	var oMenuItem56 = new sap.ui.commons.MenuItem("item1-5-6", {
		text : "Shop Floor Operators",
		enabled : false
	});
	oMenu5.addItem(oMenuItem56);
	var oMenuItem51 = new sap.ui.commons.MenuItem("item1-5-1", {
		text : "Shop Floor Computers",
		enabled : false
	});
	oMenu5.addItem(oMenuItem51);
	var oMenuItem52 = new sap.ui.commons.MenuItem("item1-5-2", {
		text : "Shop Floor Printers",
		enabled : false
	});
	oMenu5.addItem(oMenuItem52);
	var oMenuItem53 = new sap.ui.commons.MenuItem("item1-5-3", {
		text : "Plant Connectivity Servers",
		enabled : false
	});
	oMenu5.addItem(oMenuItem53);
	var oMenuItem54 = new sap.ui.commons.MenuItem("item1-5-4", {
		text : "Plant Connectivity Agents",
		enabled : false
	});
	oMenu5.addItem(oMenuItem54);
	var oMenuItem55 = new sap.ui.commons.MenuItem("item1-5-5", {
		text : "Line Side SQL Servers",
		enabled : false
	});
	oMenu5.addItem(oMenuItem55);

	var oMenu6 = new sap.ui.commons.Menu("menu6", {
		ariaDescription : "Hierarchy Setup",
		enabled : true
	});
	oMenuItem1.setSubmenu(oMenu6);
	//Create the items and add them to the sub menu
	var oMenuItem61 = new sap.ui.commons.MenuItem("item1-6-1", {
		text : "Hierarchy Management",
		enabled : false
	});
	oMenu6.addItem(oMenuItem61);
	var oMenuItem62 = new sap.ui.commons.MenuItem("item1-6-2", {
		text : "Hierarchy Levels Setup",
		enabled : false
	});
	oMenu6.addItem(oMenuItem62);

	var oMenu7 = new sap.ui.commons.Menu("menu7", {
		ariaDescription : "Master Data",
		enabled : true
	});
	oMenuItem5.setSubmenu(oMenu7);
	//Create the items and add them to the sub menu
	var oMenuItem71 = new sap.ui.commons.MenuItem("item1-7-1", {
		text : "Units Of Measure",
		enabled : false
	});
	oMenu7.addItem(oMenuItem71);
	var oMenuItem72 = new sap.ui.commons.MenuItem("item1-7-2", {
		text : "Products Management",
		enabled : false
	});
	oMenu7.addItem(oMenuItem72);
	var oMenuItem73 = new sap.ui.commons.MenuItem("item1-7-3", {
		text : "Bills of Materials",
		enabled : false
	});
	oMenu7.addItem(oMenuItem73);
	var oMenuItem74 = new sap.ui.commons.MenuItem("item1-7-4", {
		text : "Products Routing",
		enabled : false
	});
	oMenu7.addItem(oMenuItem74);

	// Create the menu
	var oMenu2 = new sap.ui.commons.Menu("menu2", {
		ariaDescription : "User Dashboards"
	});
	// Create the items and add them to the menu
	var oMenuItem21 = new sap.ui.commons.MenuItem("item2-0-1", {
		text : "Work Order Management",
		enabled : false
	});
	oMenu2.addItem(oMenuItem21);
	var oMenuItem22 = new sap.ui.commons.MenuItem("item2-0-2", {
		text : "Carrier Station Dashboard",
		enabled : false
	});
	oMenu2.addItem(oMenuItem22);
	var oMenuItem23 = new sap.ui.commons.MenuItem("item2-0-3", {
		text : "Assembly Station Dashboard",
		enabled : false
	});
	oMenu2.addItem(oMenuItem23);

	// Create the menu
	var oMenu3 = new sap.ui.commons.Menu("menu3", {
		ariaDescription : "User Reports",
		enabled : true
	});
	// Create the items and add them to the menu
	var oMenuItem31 = new sap.ui.commons.MenuItem("item3-0-1", {
		text : "Production Status Report",
		enabled : false
	});
	oMenu3.addItem(oMenuItem31);
	var oMenuItem32 = new sap.ui.commons.MenuItem("item3-0-2", {
		text : "Item Traceability Report",
		enabled : false
	});
	oMenu3.addItem(oMenuItem32);
	var oMenuItem33 = new sap.ui.commons.MenuItem("item3-0-3", {
		text : "Connector Diagnostics",
		enabled : false
	});
	oMenu3.addItem(oMenuItem33);

	//Attach the Menu to the MenuButton
	oMenuButton1.setMenu(oMenu1);
	oMenuButton2.setMenu(oMenu2);
	oMenuButton3.setMenu(oMenu3);

	//Attach an event to raise an alert when an item is selected (Button 1)
	oMenuButton1.attachItemSelected(function(oEvent) {
		switch (oEvent.getParameter("itemId")) {
		// Menu Settings 1
		case "item1-6-1":
			setTimeout("location.href = '" + "MgtHierarchy.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-6-2":
			setTimeout("location.href = '" + "LvlHierarchy.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;

		// Menu Settings 2
		case "item1-4-1":
			setTimeout("location.href = '" + "MemMapTags.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-4-5":
			setTimeout("location.href = '" + "MemMapTrxs.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-4-4":
			setTimeout("location.href = '" + "TagCommGroups.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-4-2":
			setTimeout("location.href = '" + "TagTypes.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-4-3":
			setTimeout("location.href = '" + "TagFunctions.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;

		// Menu Settings 3
		case "item1-5-6":
			setTimeout("location.href = '" + "Operators.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-5-1":
			setTimeout("location.href = '" + "Stations.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-5-2":
			setTimeout("location.href = '" + "Printers.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-5-3":
			setTimeout("location.href = '" + "PCoServers.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-5-4":
			setTimeout("location.href = '" + "PCoAgents.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-5-5":
			setTimeout("location.href = '" + "SqlServers.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;

		// Menu Settings 4
		case "item1-7-1":
			setTimeout("location.href = '" + "UnitsOfMeasure.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-7-2":
			setTimeout("location.href = '" + "ProductsMgmt.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-7-3":
			setTimeout("location.href = '" + "BomMgmt.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item1-7-4":
			setTimeout("location.href = '" + "RoutingMgmt.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;

		// Menu Default
		default:
			// alert("Items \"" + oEvent.getParameter("itemId") + "\" was selected.");
			break;
		}
	});

	//Attach an event to raise an alert when an item is selected. (Button 2)
	oMenuButton2.attachItemSelected(function(oEvent) {
		switch (oEvent.getParameter("itemId")) {
		case "item2-0-1":
			setTimeout("location.href = '" + "WorkOrders.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item2-0-2":
			setTimeout("location.href = '" + "CarrierDashboard.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item2-0-3":
			setTimeout("location.href = '" + "AssemblyDashboard.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		default:
			// alert("Items \"" + oEvent.getParameter("itemId") + "\" was selected.");
			break;
		}
	});

	//Attach an event to raise an alert when an item is selected. (Button 3)
	oMenuButton3.attachItemSelected(function(oEvent) {
		switch (oEvent.getParameter("itemId")) {
		// Menu Reports
		case "item3-0-1":
			setTimeout("location.href = '" + "ProductionStatus.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item3-0-2":
			setTimeout("location.href = '" + "ItemTraceability.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		case "item3-0-3":
			setTimeout("location.href = '" + "OEEM.irpt?ROLE=" + document.getElementById("user_role").value + "'", 0);
			break;
		default:
			//alert("Items \"" + oEvent.getParameter("itemId") + "\" was selected.");
			break;
		}
	})

	// ******************************************************************************************************************************************************************
	function menuSetting(role2Access, plant2Access) {
		// 		oMenuButton1.placeAt("app_menu");
		// 		oMenuButton2.placeAt("app_menu");
		// 		oMenuButton3.placeAt("app_menu");
		var role_ADM = "OEEM_ADM_" + plant2Access;
		var role_ENG = "OEEM_ENG_" + plant2Access;
		var role_SUP = "OEEM_SUP_" + plant2Access;
		var role_OPS = "OEEM_OPS_" + plant2Access;
		switch (role2Access) {
		case "OEEM_ADM_ALL":

			// enable Cfg Hierarchy
			oCore.byId("item1-0-1").setEnabled(true);
			// enable Cfg Memory Maps Menu
			oCore.byId("item1-0-3").setEnabled(true);
			// enable Cfg Connectivity
			oCore.byId("item1-0-4").setEnabled(true);
			// enable Master Data
			oCore.byId("item1-0-5").setEnabled(true);

			// enable WO Management
			oCore.byId("item2-0-1").setEnabled(true);
			// enable Carrier Station Dashboard
			oCore.byId("item2-0-2").setEnabled(true);
			// enable Assembly Station Dashboard
			oCore.byId("item2-0-3").setEnabled(true);

			// enable Production Status Report
			oCore.byId("item3-0-1").setEnabled(true);
			// enable Item Traceability Report
			oCore.byId("item3-0-2").setEnabled(true);
			// enable Connector Diagnostics
			oCore.byId("item3-0-3").setEnabled(true);

			// enable Cfg Memory Maps
			oCore.byId("item1-4-1").setEnabled(true);
			// enable Cfg Tag Types
			oCore.byId("item1-4-2").setEnabled(true);
			// enable Cfg Tag Functions
			oCore.byId("item1-4-3").setEnabled(true);
			// enable Cfg Tag Groups
			oCore.byId("item1-4-4").setEnabled(true);
			// enable Cfg Memory Map Transactions
			oCore.byId("item1-4-5").setEnabled(true);

			// enable Cfg Shop Floor Computers
			oCore.byId("item1-5-1").setEnabled(true);
			// enable Cfg Shop Floor Printers
			oCore.byId("item1-5-2").setEnabled(true);
			// enable Cfg PCo Servers
			oCore.byId("item1-5-3").setEnabled(true);
			// enable Cfg PCo Agents
			oCore.byId("item1-5-4").setEnabled(true);
			// enable Cfg Sql Servers
			oCore.byId("item1-5-5").setEnabled(true);
			// enable Cfg Operators
			oCore.byId("item1-5-6").setEnabled(true);

			// enable Equipment Hierarchy
			oCore.byId("item1-6-1").setEnabled(true);
			// enable Cfg Hierarchy Levels
			oCore.byId("item1-6-2").setEnabled(true);

			// Enable UOM Maintenance
			oCore.byId("item1-7-1").setEnabled(true);
			// Enable Product Maintenance
			oCore.byId("item1-7-2").setEnabled(true);
			// Enable BOM Maintenance
			oCore.byId("item1-7-3").setEnabled(true);
			// Enable Routing Maintenance
			oCore.byId("item1-7-4").setEnabled(true);

			// update screen
			//	document.getElementById("page_title").innerHTML = "ADM ALL PLANTS";
			//oMatrixT.placeAt('OEEM_content');
			//oMatrixB.placeAt('OEEM_content');
			// 			(new sap.m.Toolbar({
			// 				height : "330px",
			// 				width : "100%",
			// 				content : [ mTable ]
			// 			})).placeAt('OEEM_content');
			// 			oMatrixB.placeAt('OEEM_content');
			break;
		case role_ADM:

			// enable Cfg Hierarchy
			oCore.byId("item1-0-1").setEnabled(true);
			// enable Cfg Memory Maps Menu
			oCore.byId("item1-0-3").setEnabled(true);
			// enable Cfg Connectivity
			oCore.byId("item1-0-4").setEnabled(true);
			// enable Master Data
			oCore.byId("item1-0-5").setEnabled(true);

			// enable WO Management
			oCore.byId("item2-0-1").setEnabled(true);
			// enable Carrier Station Dashboard
			oCore.byId("item2-0-2").setEnabled(true);
			// enable Assembly Station Dashboard
			oCore.byId("item2-0-3").setEnabled(true);

			// enable Production Status Report
			oCore.byId("item3-0-1").setEnabled(true);
			// enable Item Traceability Report
			oCore.byId("item3-0-2").setEnabled(true);
			// enable Connector Diagnostics
			oCore.byId("item3-0-3").setEnabled(true);

			// enable Cfg Memory Maps
			oCore.byId("item1-4-1").setEnabled(true);
			// enable Cfg Tag Types
			oCore.byId("item1-4-2").setEnabled(true);
			// enable Cfg Tag Functions
			oCore.byId("item1-4-3").setEnabled(true);
			// enable Cfg Tag Groups
			oCore.byId("item1-4-4").setEnabled(true);
			// enable Cfg Memory Map Transactions
			oCore.byId("item1-4-5").setEnabled(true);

			// enable Cfg Shop Floor Computers
			oCore.byId("item1-5-1").setEnabled(true);
			// enable Cfg Shop Floor Printers
			oCore.byId("item1-5-2").setEnabled(true);
			// enable Cfg PCo Servers
			oCore.byId("item1-5-3").setEnabled(true);
			// enable Cfg PCo Agents
			oCore.byId("item1-5-4").setEnabled(true);
			// enable Cfg Sql Servers
			oCore.byId("item1-5-5").setEnabled(true);
			// enable Cfg Operators
			oCore.byId("item1-5-6").setEnabled(true);

			// enable Equipment Hierarchy
			oCore.byId("item1-6-1").setEnabled(true);
			// enable Cfg Hierarchy Levels
			oCore.byId("item1-6-2").setEnabled(true);

			// Enable UOM Maintenance
			oCore.byId("item1-7-1").setEnabled(true);
			// Enable Product Maintenance
			oCore.byId("item1-7-2").setEnabled(true);
			// Enable BOM Maintenance
			oCore.byId("item1-7-3").setEnabled(true);
			// Enable Routing Maintenance
			oCore.byId("item1-7-4").setEnabled(true);

			// update screen
			//	document.getElementById("page_title").innerHTML = "ADM PLANT " + plant2Access;
			//oMatrixT.placeAt('OEEM_content');
			//oMatrixB.placeAt('OEEM_content');
			// 			(new sap.m.Toolbar({
			// 				height : "330px",
			// 				content : [ tbMissions ]
			// 			})).placeAt('OEEM_content');
			// 			oMatrixB.placeAt('OEEM_content');
			break;
		case "OEEM_OPS_ALL":

			// enable WO Management
			oCore.byId("item2-0-1").setEnabled(true);
			// enable Carrier Station Dashboard
			oCore.byId("item2-0-2").setEnabled(true);
			// enable Assembly Station Dashboard
			oCore.byId("item2-0-3").setEnabled(true);

			// enable Production Status Report
			oCore.byId("item3-0-1").setEnabled(true);
			// enable Item Traceability Report
			oCore.byId("item3-0-2").setEnabled(true);
			// enable Connector Diagnostics
			oCore.byId("item3-0-3").setEnabled(true);

			//	document.getElementById("page_title").innerHTML = "OPS ALL PLANTS";
			//oMatrixT.placeAt('OEEM_content');
			//oMatrixB.placeAt('OEEM_content');
			// 			(new sap.m.Toolbar({
			// 				height : "330px",
			// 				content : [ tbMissions ]
			// 			})).placeAt('OEEM_content');
			// 			oMatrixB.placeAt('OEEM_content');
			break;
		case role_OPS:

			// enable WO Management
			oCore.byId("item2-0-1").setEnabled(true);
			// enable Carrier Station Dashboard
			oCore.byId("item2-0-2").setEnabled(true);
			// enable Assembly Station Dashboard
			oCore.byId("item2-0-3").setEnabled(true);

			// enable Production Status Report
			oCore.byId("item3-0-1").setEnabled(true);
			// enable Item Traceability Report
			oCore.byId("item3-0-2").setEnabled(true);
			// enable Connector Diagnostics
			oCore.byId("item3-0-3").setEnabled(true);

			//		document.getElementById("page_title").innerHTML = "OPS PLANT " + plant2Access;
			//oMatrixT.placeAt('OEEM_content');

			// 			(new sap.m.Toolbar({
			// 				height : "330px",
			// 				content : [ tbMissions ]
			// 			})).placeAt('OEEM_content');
			// 			oMatrixB.placeAt('OEEM_content');
			break;
		default:
			alert("MES Module Role Unknown: " + role2Access);
			break;
		}

	}
	var mTable = new sap.ui.table.Table({
		//visibleRowCount : 12,
		//firstVisibleRow : 3,
		//visibleRowCountMode : sap.ui.table.VisibleRowCountMode.Interactive,
		firstVisibleRow : 0,
		selectionBehavior : sap.ui.table.SelectionBehavior.Row,
		selectionMode : sap.ui.table.SelectionMode.Single,
		editable : false,
		enableColumnFreeze : false,
		width : "100%",
		columnHeaderVisible : true,
		enableCustomFilter : false,
	//navigationMode : sap.ui.table.NavigationMode.Paginator
	});

	var StopReasons_Data;
	var StopReasons_selectedIndex;

	function StopReasons_Table() { // Bind the table rows to this model
		//load table's data
		Param1 = "MESM_StopReasons";
		Param2 = "sortOrder";
		getData("/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + Param1 + "&Param.2=" + Param2
				+ "&Content-Type=text/xml", parseJsonParent);

		function parseJsonParent(jsondata) {
			StopReasons_selectedIndex = -1;
			StopReasons_Data = [];
			for (var i = 0; i < jsondata.length; i++) {
				StopReasons_Data.push({
					recordID : jsondata[i]['recordID'],
					reasonName : jsondata[i]['reasonName'],
					reasonDescr : jsondata[i]['reasonDescr'],
					reasonActive : jsondata[i]['reasonActive'],
					sortOrder : jsondata[i]['sortOrder'],
					catagory : jsondata[i]['catagory'],
					recordID_FloorMaps : jsondata[i]['recordID_FloorMaps'],
					unitName_FloorMaps : jsondata[i]['unitName_FloorMaps'],
					CreatedBy : jsondata[i]['CreatedBy'],
					CreatedOn : jsondata[i]['CreatedOn'],
				});
			}
		}
		//var timestamp = new Date().getTime();
		url = "/XMII/Illuminator?QueryTemplate=OEEM/MANAGEMENT/QUERIES/StopReasons_get&ts=" + (new Date().getTime())
				+ "&Content-Type=text/xml";
		//alert(url);
		//url = "mock/Get_Missions.xml"; //Mock request

		mModelXML.loadData(url, "", false);
		//alert(mModelXML.getXML());
		//		createColumns
		mTable.setModel(mModelXML);
		mTable.bindRows("/Rowset/Row");
		mTable.setVisibleRowCount(8);
		mTable.addColumn(new sap.ui.table.Column({
			width : "150px",
			label : new sap.ui.commons.Label({
				text : " Name"
			}),
			template : new sap.ui.commons.TextView().bindProperty("text", "reasonName"),
			sortProperty : "reasonName",
			filterProperty : "reasonName",
			resizable : true,
		}));
		mTable.addColumn(new sap.ui.table.Column({
			width : "auto",
			label : new sap.ui.commons.Label({
				text : " Description"
			}),
			template : new sap.ui.commons.TextView().bindProperty("text", "reasonDescr"),
			sortProperty : "reasonDescr",
			filterProperty : "reasonDescr",
			resizable : true,
		}));
		mTable.addColumn(new sap.ui.table.Column({
			width : "150px",
			label : new sap.ui.commons.Label({
				text : " unitName"
			}),
			template : new sap.ui.commons.TextView().bindProperty("text", "unitName_FloorMaps"),
			sortProperty : "unitName_FloorMaps",
			filterProperty : "unitName_FloorMaps",
			resizable : true,
		}));
		mTable.addColumn(new sap.ui.table.Column({
			width : "80px",
			label : new sap.ui.commons.Label({
				text : " unitID"
			}),
			template : new sap.ui.commons.TextView().bindProperty("text", "recordID_FloorMaps"),
			sortProperty : "recordID_FloorMaps",
			filterProperty : "recordID_FloorMaps",
			resizable : true,
		}));
		mTable.addColumn(new sap.ui.table.Column({
			width : "150px",
			label : new sap.ui.commons.Label({
				text : "Catagory"
			}),
			template : new sap.ui.commons.TextView().bindProperty("text", "catagory"),
			sortProperty : "catagory",
			filterProperty : "catagory",
			resizable : true,
		}));

		// 		mTable.addColumn(new sap.ui.table.Column({
		// 			width : "80px",
		// 			label : new sap.ui.commons.Label({
		// 				text : "ModifiedBy"
		// 			}),
		// 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedBy"),
		// 			sortProperty : "ModifiedBy",
		// 			filterProperty : "ModifiedBy",
		// 			resizable : true,
		// 		}));
		// 		mTable.addColumn(new sap.ui.table.Column({
		// 			width : "150px",
		// 			label : new sap.ui.commons.Label({
		// 				text : "ModifiedOn"
		// 			}),
		// 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedOn"),
		// 			sortProperty : "ModifiedOn",
		// 			filterProperty : "ModifiedOn",
		// 			resizable : true,
		// 		}));
		mTable.addColumn(new sap.ui.table.Column({
			width : "80px",
			label : new sap.ui.commons.Label({
				text : " CreatedBy"
			}),
			template : new sap.ui.commons.TextView().bindProperty("text", "CreatedBy"),
			sortProperty : "CreatedBy",
			filterProperty : "CreatedBy",
			resizable : true,
		}));

		mTable.addColumn(new sap.ui.table.Column({
			width : "150px",
			label : new sap.ui.commons.Label({
				text : "CreatedOn"
			}),
			template : new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
			sortProperty : "CreatedOn",
			filterProperty : "CreatedOn",
			resizable : true,
		}));
		mTable.addColumn(new sap.ui.table.Column({
			width : "60px",
			label : new sap.ui.commons.Label({
				text : "Active"
			}),
			template : new sap.ui.commons.CheckBox().bindProperty("checked", "reasonActive", function(s) {
				return s == "1";
			}),
			resizable : true,
			hAlign : "Center",
		}));

		//		sp = document.getElementById("OEEM_content").clientWidth - 200 - 190;
		mTable.setToolbar(new sap.ui.commons.Toolbar({
			height : "50px",
			items : [ new sap.m.Label({
				desig : sap.m.LabelDesign.Bold,
				textAlign : sap.ui.core.TextAlign.Center,
				text : "DOWNTIME REASON DEFs: LINE(A) - WORKCENTER(B) - EQUIPMENT(C)",
				// 				width : "" + (document.getElementById("OEEM_content").clientWidth - 200 - 400) + "px",
				height : "30px",
			}) ],
			rightItems : [ new sap.ui.commons.Button("btn_tbOperations_add", {
				text : "Add",
				width : "80px",
				height : "30px",
				style : "Default",
				icon : "sap-icon://add",
				lite : true,
				press : function() {
					StopReasons_add("", "add a StopReason");
				}
			}).setEnabled(true), new sap.ui.commons.Button("btn_tbOperations_edit", {
				text : "Edit",
				width : "80px",
				height : "30px",
				style : "Default",
				icon : "sap-icon://edit",
				lite : true,
				press : function() {
					StopReasons_edit("", "edit an operation", true);
				}
			}), new sap.ui.commons.Button("btn_tbOperations_delete", {
				text : "Delete",
				width : "80px",
				height : "30px",
				style : "Default",
				icon : "sap-icon://delete",
				lite : true,
				press : function() {
					StopReasons_edit("", "delete a StopReason", false);
				}
			})

			// 			, new sap.ui.commons.MenuButton({
			// 				height : "30px",
			// 				width : "40px",
			// 				//text : "",
			// 				icon : "sap-icon://menu",
			// 				lite : true,
			// 				menu : new sap.ui.unified.Menu({
			// 					title : "Operation",
			// 					enabled : true,
			// 					items : [ new sap.ui.commons.MenuItem("menu_tbOperations_add", {
			// 						text : "Add",
			// 						enabled : true,
			// 					}), new sap.ui.commons.MenuItem("menu_tbOperations_edit", {
			// 						text : "Edit",
			// 						enabled : true,
			// 					}), new sap.ui.commons.MenuItem("menu_tbOperations_delete", {
			// 						text : "Delete",
			// 						enabled : true,
			// 					}) ]
			// 				}),
			// 				itemSelected : function(oEvent) {
			// 					alert("menuOperationMissionitemSelected");
			// 				}
			// 			})
			]
		}));
		var str = location.href;
		mTable.filter(mTable.getColumns()[3], location.href.substring(location.href.indexOf("FloorMaps_Index=") + 16));
	}
	//wxy
	function StopReasons_add(table, _title) {
		var oMatrix = new sap.ui.commons.layout.MatrixLayout({
			layoutFixed : true,
			width : '450px',
			columns : 3
		});
		oMatrix.setWidths('150px', '300px');

		_unitName = new sap.ui.commons.TextField({
			value : FloorMaps_Data[FloorMaps_Index]['unitName'],
			width : '100%',
		});
		oMatrix.createRow(new sap.ui.commons.Label({
			text : 'unitName:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _unitName.setEnabled(false));

		_unitID = new sap.ui.commons.TextField({
			value : FloorMaps_Data[FloorMaps_Index]['recordID'],
			width : '100%'
		});
		oMatrix.createRow(new sap.ui.commons.Label({
			text : 'unitID:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _unitID.setEnabled(false));
		_StopReason = new sap.ui.commons.TextField({
			value : "",
			width : '100%'
		});
		oMatrix.createRow(new sap.ui.commons.Label({
			text : 'StopReason:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _StopReason.setEnabled(true));

		_Des = new sap.ui.commons.TextArea({
			value : "",
			rows : 4,
			cols : 80,
			width : '100%',
			wrapping : sap.ui.core.Wrapping.Soft,
		});
		// 		oMatrix.createRow(new sap.ui.commons.Label({
		// 			text : 'Description:',
		// 			textAlign : sap.ui.core.TextAlign.Left,
		// 		}), _Des.setEnabled(true));
		oMatrix.createRow(new sap.ui.commons.Label({
			text : 'Description:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _Des.setEnabled(true));
		_sixCatagory = new sap.ui.commons.ComboBox({
			value : "Breakdowns",
			maxPopupItems : 10,
			width : '100%',
			items : [ new sap.ui.core.ListItem({
				text : "Breakdowns",
			}), new sap.ui.core.ListItem({
				text : "Setup and Adjustments",
			}), new sap.ui.core.ListItem({
				text : "Small Stops",
			}), new sap.ui.core.ListItem({
				text : "Reduced Speed",
			}) ]
		});
		oMatrix.createRow(new sap.ui.commons.Label({
			text : 'sixCatagory:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _sixCatagory.setEnabled(true));

		_sixDes = new sap.ui.commons.TextArea({
			value : "",
			rows : 4,
			cols : 80,
			width : '100%',
			wrapping : sap.ui.core.Wrapping.Soft,
		});
		oMatrix.createRow(new sap.ui.commons.Label({
			text : 'sixCatagory Des:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _sixDes.setEnabled(false));

		_CreatedBy = new sap.ui.commons.TextField({
			value : _userNAME,
			width : '100%'
		});
		oMatrix.createRow(new sap.ui.commons.Label({
			text : 'CreatedBy:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _CreatedBy.setEnabled(false));

		_CreatedOn = new sap.m.DateTimeInput({
			// enabled : true,
			// editable : true,
			type : sap.m.DateTimeInputType.DateTime,
			displayFormat : "MMM dd, yyyy hh:mm:ss a",
			valueFormat : "MMM dd, yyyy hh:mm:ss a",
			dateValue : (new Date())
		});

		oMatrix.createRow(new sap.ui.commons.Label({
			text : 'CreatedOn:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _CreatedOn.setEnabled(false));

		var _Active = new sap.ui.commons.CheckBox({
			checked : true
		});
		oMatrix.createRow(new sap.ui.commons.Label({
			text : 'Active',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _Active.setEnabled(true));

		//setDateValue();
		//Create a standard divider
		var oCell = new sap.ui.commons.layout.MatrixLayoutCell({
			colSpan : 2
		});
		oCell.addContent(new sap.ui.commons.HorizontalDivider());
		oMatrix.createRow(oCell);

		var oDialog = new sap.ui.commons.Dialog({
			title : _title,
			modal : true,
			buttons : [
					new sap.ui.commons.Button({
						text : "Cancel",
						icon : "sap-icon://decline",
						press : function() {
							//MissionStatus_TextField.getLiveValue();
							oDialog.close();
						}
					}),
					new sap.ui.commons.Button({
						text : "submit",
						icon : "sap-icon://complete",
						enabled : true,
						press : function() {
							Param1 = escapeSQLString(_StopReason.getValue());
							Param2 = escapeSQLString(_Des.getValue());
							Param3 = escapeSQLString(_Active.getChecked() ? 1 : 0);
							Param4 = escapeSQLString(_sixCatagory.getValue());
							Param5 = escapeSQLString(FloorMaps_Data[FloorMaps_Index]['recordID']);
							Param6 = escapeSQLString(FloorMaps_Data[FloorMaps_Index]['unitName']);
							Param7 = escapeSQLString(_CreatedBy.getValue());
							var oReqData;
							if (window.XMLHttpRequest) {
								oReqData = new XMLHttpRequest();
							}
							if (oReqData != null) {
								var timestamp = new Date().getTime();
								var paramStr = "Param.1=" + encodeURIComponent(Param1) + "&Param.2=" + encodeURIComponent(Param2)
										+ "&Param.3=" + encodeURIComponent(Param3) + "&Param.4=" + encodeURIComponent(Param4) + "&Param.5="
										+ encodeURIComponent(Param5) + "&Param.6=" + encodeURIComponent(Param6) + "&Param.7="
										+ encodeURIComponent(Param7);
								var queryStr = "/XMII/Illuminator?QueryTemplate=OEEM/MANAGEMENT/QUERIES/StopReasons_add&" + paramStr
										+ "&ts=" + timestamp + "&Content-Type=text/xml";
								//alert(queryStr);
								oReqData.open("GET", queryStr, true);
								oReqData.onreadystatechange = function() {
									if (oReqData.readyState == 4)
										if (oReqData.status == 200) {
											// Successful -- rebuild the screen
											//updateTableLevels();

											mTable.clearSelection();
											url = "/XMII/Illuminator?QueryTemplate=OEEM/MANAGEMENT/QUERIES/StopReasons_get&ts="
													+ (new Date().getTime()) + "&Content-Type=text/xml";
											mModelXML.loadData(url, "", false);
											mTable.getModel().refresh(true);

											oOverlayContainerAdd.close();
											// update parents
											updateParents();
											updateParentsE();
										} else {
											// Not Successful -- alert the user
											alert("Error: " + oReqData.statusText);
										}
								}
								oReqData.send();
							} else {
								window.alert("Error creating XmlHttpRequest object.");
							}
							oDialog.close();
						}
					}), ],
			content : [ oMatrix ]
		});
		oDialog.open();
	}
	//wxy
	function StopReasons_edit(table, _title, isEdit) {
		// 		var oMatrix = new sap.ui.commons.layout.MatrixLayout({
		// 			layoutFixed : true,
		// 			width : '450px',
		// 			columns : 2
		// 		});

		var _MatrixLayout = new sap.ui.commons.layout.MatrixLayout({
			layoutFixed : true,
			width : '450px',
			columns : 2
		});
		_MatrixLayout.setWidths('150px', '300px');
		recordID = "";
		reasonName = "";
		reasonDescr = "";
		reasonActive = "";
		sortOrder = "";
		catagory = "";
		recordID_FloorMaps = "";
		unitName_FloorMaps = "";
		CreatedBy = "";
		CreatedOn = "";
		for (i = 0; i < StopReasons_Data.length; i++) {
			if (StopReasons_Data[i]['recordID'] == StopReasons_recordID) {
				recordID = StopReasons_Data[i]['recordID'];
				reasonName = StopReasons_Data[i]['reasonName'];
				reasonDescr = StopReasons_Data[i]['reasonDescr'];
				reasonActive = StopReasons_Data[i]['reasonActive'];
				sortOrder = StopReasons_Data[i]['sortOrder'];
				catagory = StopReasons_Data[i]['catagory'];
				recordID_FloorMaps = StopReasons_Data[i]['recordID_FloorMaps'];
				unitName_FloorMaps = StopReasons_Data[i]['unitName_FloorMaps'];
				CreatedBy = StopReasons_Data[i]['CreatedBy'];
				CreatedOn = StopReasons_Data[i]['CreatedOn'];
			}
		}
		_unitName = new sap.ui.commons.TextField({
			value : unitName_FloorMaps,
			width : '100%',
		});
		_MatrixLayout.createRow(new sap.ui.commons.Label({
			text : 'unitName:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _unitName.setEnabled(false));

		_unitID = new sap.ui.commons.TextField({
			value : recordID_FloorMaps,
			width : '100%'
		});
		_MatrixLayout.createRow(new sap.ui.commons.Label({
			text : 'unitID:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _unitID.setEnabled(false));
		_StopReason = new sap.ui.commons.TextField({
			value : reasonName,
			width : '100%'
		});
		_MatrixLayout.createRow(new sap.ui.commons.Label({
			text : 'StopReason:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _StopReason.setEnabled(false));

		_Des = new sap.ui.commons.TextArea({
			value : reasonDescr,
			rows : 4,
			cols : 80,
			width : '100%',
			wrapping : sap.ui.core.Wrapping.Soft,
		});
		// 		_MatrixLayout.createRow(new sap.ui.commons.Label({
		// 			text : 'Description:',
		// 			textAlign : sap.ui.core.TextAlign.Left,
		// 		}), _Des.setEnabled(true));
		_MatrixLayout.createRow(new sap.ui.commons.Label({
			text : 'Description:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _Des.setEnabled(false));
		_sixCatagory = new sap.ui.commons.ComboBox({
			value : "catagory",
			maxPopupItems : 10,
			width : '100%',
			items : [ new sap.ui.core.ListItem({
				text : "Breakdowns",
			}), new sap.ui.core.ListItem({
				text : "Setup and Adjustments",
			}), new sap.ui.core.ListItem({
				text : "Small Stops",
			}), new sap.ui.core.ListItem({
				text : "Reduced Speed",
			}) ]
		});
		_MatrixLayout.createRow(new sap.ui.commons.Label({
			text : 'sixCatagory:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _sixCatagory.setEnabled(false));

		_CreatedBy = new sap.ui.commons.TextField({
			value : CreatedBy,
			width : '100%'
		});
		_MatrixLayout.createRow(new sap.ui.commons.Label({
			text : 'CreatedBy:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _CreatedBy.setEnabled(false));

		_CreatedOn = new sap.m.DateTimeInput({
			// enabled : true,
			// editable : true,
			type : sap.m.DateTimeInputType.DateTime,
			displayFormat : "MMM dd, yyyy hh:mm:ss a",
			valueFormat : "MMM dd, yyyy hh:mm:ss a",
			dateValue : new Date(CreatedOn)
		});

		_MatrixLayout.createRow(new sap.ui.commons.Label({
			text : 'CreatedOn:',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _CreatedOn.setEnabled(false));

		var _Active = new sap.ui.commons.CheckBox({
			checked : true
		});
		_MatrixLayout.createRow(new sap.ui.commons.Label({
			text : 'Active',
			textAlign : sap.ui.core.TextAlign.Left,
			width : '100%',
		}), _Active.setEnabled(false));

		//setDateValue();
		//Create a standard divider
		var oCell = new sap.ui.commons.layout.MatrixLayoutCell({
			colSpan : 2
		});
		oCell.addContent(new sap.ui.commons.HorizontalDivider());
		_MatrixLayout.createRow(oCell);

		var oDialog = new sap.ui.commons.Dialog({
			title : _title,
			modal : true,
			buttons : [
					new sap.ui.commons.Button({
						text : "Cancel",
						icon : "sap-icon://decline",
						press : function() {
							//MissionStatus_TextField.getLiveValue();
							oDialog.close();
						}
					}),
					new sap.ui.commons.Button({
						text : "submit",
						icon : "sap-icon://complete",
						enabled : true,
						press : function() {
							Param1 = escapeSQLString(_StopReason.getValue());
							Param2 = escapeSQLString(_Des.getValue());
							Param3 = escapeSQLString(_Active.getChecked() ? 1 : 0);
							Param4 = escapeSQLString(_sixCatagory.getValue());
							Param5 = escapeSQLString(FloorMaps_Data[FloorMaps_Index]['recordID']);
							Param6 = escapeSQLString(FloorMaps_Data[FloorMaps_Index]['unitName']);
							Param7 = escapeSQLString(_CreatedBy.getValue());
							var oReqData;
							if (window.XMLHttpRequest) {
								oReqData = new XMLHttpRequest();
							}
							if (oReqData != null) {
								var timestamp = new Date().getTime();
								var paramStr = "Param.1=" + encodeURIComponent(Param1) + "&Param.2=" + encodeURIComponent(Param2)
										+ "&Param.3=" + encodeURIComponent(Param3) + "&Param.4=" + encodeURIComponent(Param4) + "&Param.5="
										+ encodeURIComponent(Param5) + "&Param.6=" + encodeURIComponent(Param6) + "&Param.7="
										+ encodeURIComponent(Param7);
								var queryStr = "/XMII/Illuminator?QueryTemplate=OEEM/MANAGEMENT/QUERIES/StopReasons_add&" + paramStr
										+ "&ts=" + timestamp + "&Content-Type=text/xml";
								alert(queryStr);
								oReqData.open("GET", queryStr, true);
								oReqData.onreadystatechange = function() {
									if (oReqData.readyState == 4)
										if (oReqData.status == 200) {
											// Successful -- rebuild the screen
											//updateTableLevels();

											mTable.clearSelection();
											url = "/XMII/Illuminator?QueryTemplate=OEEM/MANAGEMENT/QUERIES/StopReasons_get&ts="
													+ (new Date().getTime()) + "&Content-Type=text/xml";
											mModelXML.loadData(url, "", false);
											mTable.getModel().refresh(true);

											oOverlayContainerAdd.close();
											// update parents
											updateParents();
											updateParentsE();
										} else {
											// Not Successful -- alert the user
											alert("Error: " + oReqData.statusText);
										}
								}
								oReqData.send();
							} else {
								window.alert("Error creating XmlHttpRequest object.");
							}
							oDialog.close();
						}
					}), ],
			content : [ _MatrixLayout ]
		});
		oDialog.open();
	}
</script>
</head>

<body onLoad="roleSecurity()">


	<input id="user_roles" type="hidden" value="{IllumLoginRoles}"
		style="display: block; width: 1000px;" readonly />
	<input id="user_role" type="hidden" value="{ROLE}"
		style="display: block; width: 1000px;" readonly />
	<input id="user_name" type="hidden" value="{IllumLoginName}"
		style="display: block; width: 1000px;" readonly />
	<input id="user_height" type="hidden" value="{HEIGHT}"
		style="display: block; width: 100px;" readonly />
	<input id="user_address" type="hidden" value="{Machine}"
		style="display: block; width: 1000px;" readonly />

	<!-- 	<div id="app_header"> -->
	<!-- 		<div id="app_title">HIERARCHY LEVELS</div> -->
	<!-- 		<div id="app_menu"></div> -->
	<!-- 		<div id="page_title">DEFAULT SCREEN</div> -->
	<!-- 	</div> -->
	<div id="OEEM_content"></div>
	<div id="OEEM_content2"></div>

</body>
</html>