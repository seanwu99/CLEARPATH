<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">

    <title>Reports Center</title>

    <script id="sap-ui-bootstrap" src="https://sapui5.netweaver.ondemand.com/resources/sap-ui-core.js"
            data-sap-ui-theme="sap_bluecrystal" data-sap-ui-libs="sap.ui.core,sap.m,sap.ui.commons,sap.ui.table"
            data-sap-ui-language="en">
    </script>
    <script src="stimulsoft/stimulsoft.reports.js" type="text/javascript"></script>
    <script src="stimulsoft/stimulsoft.viewer.js" type="text/javascript"></script>
    <script src="stimulsoft/stimulsoft.designer.js" type="text/javascript"></script>
    <script src="stimulsoft/Reports/demo.js" type="text/javascript"></script>
    <script src="rts.oeem.ApplicationHeader.js"></script>
    <script src="rts.oeem.MenuBar.js"></script>
    <script type="text/javascript" src="Common/js/default.js"></script>
    <link href="stimulsoft/css/demo.css" rel="stylesheet">
    <link href="stimulsoft/css/stimulsoft.designer.office2013.whiteteal.css" rel="stylesheet">
    <link href="stimulsoft/css/stimulsoft.viewer.office2013.whiteteal.css" rel="stylesheet">

    <script>
        var reportOne;
        var reportViewer = null;
        var reportDesigner = null;

        //        var demoDataSet = null;
        //        var jsonDataSet = null;
        var xmlDataSet = null;
        var reportJSONModel = new sap.ui.model.json.JSONModel();
        var reportXMLModel = new sap.ui.model.xml.XMLModel();


        var mockServer = false;
        var USERNAME = "unknow";
        // ******************************************************************************************************************************************************************
        // 	function init() {
        // 	}


        //        var StopReasons_Data;
        //        var StopReasons_selectedIndex;

        $(function () {
            USERNAME = document.getElementById("user_name").value;
            var myRoles = document.getElementById("user_roles").value;
            var role2Access = "OEEM_" + document.getElementById("user_role").value;
            // alert(role2Access);
            if (!mockServer && myRoles.indexOf(role2Access) < 0) {
                window.location.assign("security.irpt");
                return true;
            }

            var roleString = document.getElementById("user_role").value;
            var roleArray = roleString.split("_");
            level2Access = roleArray[0];
            plant2Access = roleArray[1];
            var appHeader = new ApplicationHeader({
                user: USERNAME,
                elm: 'header',
                logoSrc: 'Common/images/logo.png',
                logoText: 'Overall Equipment Effectiveness Module on SAP MII'
            });

            var menuBar = new MenuBar({
                elm: 'menu'
            });
            floorTreeInit();
//        mTree.placeAt("nav");
//            StopReasons_Table();
//            mTable.placeAt("p2");
            reportDataLoad();
        });
        // ******************************************************************************************************************************************************************

        // ******************************************************************************************************************************************************************


        //        function StopReasons_Table() { // Bind the table rows to this model
        //            //load table's data
        //            P1 = "SELECT *";
        //            P2 = "FROM MESM_StopReasons";
        //            P3 = "ORDER BY sortOrder";
        //            P4 = "";
        //            var url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&Param.4=" + P4 + "&Content-Type=text/xml";
        //            if (mockServer) {
        //                url = 'mockServer/MESM_StopReasons.xml'
        //            }
        //            //        alert(url);
        //            getData(url, parseJsonParent);
        //
        //            function parseJsonParent(jsondata) {
        //                //ss(jsondata.length);
        ////                StopReasons_selectedIndex = -1;
        ////                StopReasons_Data = [];
        ////                for (var i = 0; i < jsondata.length; i++) {
        ////                    StopReasons_Data.push({
        ////                        recordID: jsondata[i]['recordID'],
        ////                        reasonName: jsondata[i]['reasonName'],
        ////                        reasonDescr: jsondata[i]['reasonDescr'],
        ////                        reasonActive: jsondata[i]['reasonActive'],
        ////                        sortOrder: jsondata[i]['sortOrder'],
        ////                        catagory: jsondata[i]['catagory'],
        ////                        recordID_FloorMaps: jsondata[i]['recordID_FloorMaps'],
        ////                        unitName_FloorMaps: jsondata[i]['unitName_FloorMaps'],
        ////                        CreatedBy: jsondata[i]['CreatedBy'],
        ////                        CreatedOn: jsondata[i]['CreatedOn']
        ////                    });
        ////                }
        //                //   alert(StopReasons_Data.length);
        //            }
        //
        //            //var timestamp = new Date().getTime();
        //            // 		url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&ts="
        //            // 				+ (new Date().getTime()) + "&Content-Type=text/xml";
        //            //alert(url);
        //            //url = "mock/Get_Missions.xml"; //Mock request
        //            var mModelXML = new sap.ui.model.xml.XMLModel();
        //            mModelXML.loadData(url, "", false);
        ////            alert(mModelXML.getXML());
        //            //		createColumns
        //            var mTable = new sap.ui.table.Table({
        //                //visibleRowCount : 12,
        //                //firstVisibleRow : 3,
        //                //visibleRowCountMode : sap.ui.table.VisibleRowCountMode.Interactive,
        //                firstVisibleRow: 0,
        //                selectionBehavior: sap.ui.table.SelectionBehavior.Row,
        //                selectionMode: sap.ui.table.SelectionMode.Single,
        //                editable: false,
        //                enableColumnFreeze: false,
        //                width: "100%",
        //                columnHeaderVisible: true,
        //                enableCustomFilter: false,
        //                //navigationMode : sap.ui.table.NavigationMode.Paginator
        //            });
        //            mTable.setModel(mModelXML);
        //            mTable.bindRows("/Rowset/Row");
        //            mTable.setVisibleRowCount(7);
        //            mTable.addColumn(new sap.ui.table.Column({
        //                width: "150px",
        //                label: new sap.ui.commons.Label({
        //                    text: " Name"
        //                }),
        //                template: new sap.ui.commons.TextView().bindProperty("text", "reasonName"),
        //                sortProperty: "reasonName",
        //                filterProperty: "reasonName",
        //                resizable: true
        //            }));
        //            mTable.addColumn(new sap.ui.table.Column({
        //                width: "auto",
        //                label: new sap.ui.commons.Label({
        //                    text: " Description"
        //                }),
        //                template: new sap.ui.commons.TextView().bindProperty("text", "reasonDescr"),
        //                sortProperty: "reasonDescr",
        //                filterProperty: "reasonDescr",
        //                resizable: true
        //            }));
        //            mTable.addColumn(new sap.ui.table.Column({
        //                width: "150px",
        //                label: new sap.ui.commons.Label({
        //                    text: " unitName"
        //                }),
        //                template: new sap.ui.commons.TextView().bindProperty("text", "unitName_FloorMaps"),
        //                sortProperty: "unitName_FloorMaps",
        //                filterProperty: "unitName_FloorMaps",
        //                resizable: true
        //            }));
        ////        mTable.addColumn(new sap.ui.table.Column({
        ////            width : "80px",
        ////            label : new sap.ui.commons.Label({
        ////                text : " unitID"
        ////            }),
        ////            template : new sap.ui.commons.TextView().bindProperty("text", "recordID_FloorMaps"),
        ////            sortProperty : "recordID_FloorMaps",
        ////            filterProperty : "recordID_FloorMaps",
        ////            resizable : true,
        ////        }));
        //            mTable.addColumn(new sap.ui.table.Column({
        //                width: "150px",
        //                label: new sap.ui.commons.Label({
        //                    text: "Catagory"
        //                }),
        //                template: new sap.ui.commons.TextView().bindProperty("text", "catagory"),
        //                sortProperty: "catagory",
        //                filterProperty: "catagory",
        //                resizable: true
        //            }));
        //
        //            // 		mTable.addColumn(new sap.ui.table.Column({
        //            // 			width : "80px",
        //            // 			label : new sap.ui.commons.Label({
        //            // 				text : "ModifiedBy"
        //            // 			}),
        //            // 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedBy"),
        //            // 			sortProperty : "ModifiedBy",
        //            // 			filterProperty : "ModifiedBy",
        //            // 			resizable : true,
        //            // 		}));
        //            // 		mTable.addColumn(new sap.ui.table.Column({
        //            // 			width : "150px",
        //            // 			label : new sap.ui.commons.Label({
        //            // 				text : "ModifiedOn"
        //            // 			}),
        //            // 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedOn"),
        //            // 			sortProperty : "ModifiedOn",
        //            // 			filterProperty : "ModifiedOn",
        //            // 			resizable : true,
        //            // 		}));
        //            mTable.addColumn(new sap.ui.table.Column({
        //                width: "80px",
        //                label: new sap.ui.commons.Label({
        //                    text: " CreatedBy"
        //                }),
        //                template: new sap.ui.commons.TextView().bindProperty("text", "CreatedBy"),
        //                sortProperty: "CreatedBy",
        //                filterProperty: "CreatedBy",
        //                resizable: true
        //            }));
        //
        //            mTable.addColumn(new sap.ui.table.Column({
        //                width: "150px",
        //                label: new sap.ui.commons.Label({
        //                    text: "CreatedOn"
        //                }),
        //                template: new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
        //                sortProperty: "CreatedOn",
        //                filterProperty: "CreatedOn",
        //                resizable: true
        //            }));
        //            mTable.addColumn(new sap.ui.table.Column({
        //                width: "60px",
        //                label: new sap.ui.commons.Label({
        //                    text: "Active"
        //                }),
        //                template: new sap.ui.commons.CheckBox().bindProperty("checked", "reasonActive", function (s) {
        //                    return s == "1";
        //                }),
        //                resizable: true,
        //                hAlign: "Center"
        //            }));
        //
        //            //		sp = document.getElementById("OEEM_content").clientWidth - 200 - 190;
        //            mTable.setToolbar(new sap.ui.commons.Toolbar({
        //                height: "50px",
        //                items: [new sap.m.Label({
        //                    desig: sap.m.LabelDesign.Bold,
        //                    textAlign: sap.ui.core.TextAlign.Center,
        //                    text: "DOWNTIME REASON DEFs: LINE(A) - WORKCENTER(B) - EQUIPMENT(C)",
        //                    // 				width : "" + (document.getElementById("OEEM_content").clientWidth - 200 - 400) + "px",
        //                    height: "30px"
        //                })],
        //                rightItems: [new sap.ui.commons.Button("btn_tbOperations_add", {
        //                    text: "Add",
        //                    width: "80px",
        //                    height: "30px",
        //                    style: "Default",
        //                    icon: "sap-icon://add",
        //                    lite: true,
        //                    press: function () {
        //                        StopReasons_add("", "add a StopReason");
        //                    }
        //                }).setEnabled(true), new sap.ui.commons.Button("btn_tbOperations_edit", {
        //                    text: "Edit",
        //                    width: "80px",
        //                    height: "30px",
        //                    style: "Default",
        //                    icon: "sap-icon://edit",
        //                    lite: true,
        //                    press: function () {
        //                        StopReasons_edit("", "edit an operation", true);
        //                    }
        //                }), new sap.ui.commons.Button("btn_tbOperations_delete", {
        //                    text: "Delete",
        //                    width: "80px",
        //                    height: "30px",
        //                    style: "Default",
        //                    icon: "sap-icon://delete",
        //                    lite: true,
        //                    press: function () {
        //                        StopReasons_edit("", "delete a StopReason", false);
        //                    }
        //                })
        //
        //                    // 			, new sap.ui.commons.MenuButton({
        //                    // 				height : "30px",
        //                    // 				width : "40px",
        //                    // 				//text : "",
        //                    // 				icon : "sap-icon://menu",
        //                    // 				lite : true,
        //                    // 				menu : new sap.ui.unified.Menu({
        //                    // 					title : "Operation",
        //                    // 					enabled : true,
        //                    // 					items : [ new sap.ui.commons.MenuItem("menu_tbOperations_add", {
        //                    // 						text : "Add",
        //                    // 						enabled : true,
        //                    // 					}), new sap.ui.commons.MenuItem("menu_tbOperations_edit", {
        //                    // 						text : "Edit",
        //                    // 						enabled : true,
        //                    // 					}), new sap.ui.commons.MenuItem("menu_tbOperations_delete", {
        //                    // 						text : "Delete",
        //                    // 						enabled : true,
        //                    // 					}) ]
        //                    // 				}),
        //                    // 				itemSelected : function(oEvent) {
        //                    // 					alert("menuOperationMissionitemSelected");
        //                    // 				}
        //                    // 			})
        //                ]
        //            }));
        //            // 		var str = location.href;
        //            // 		mTable.filter(mTable.getColumns()[3], location.href.substring(location.href.indexOf("FloorMaps_Index=") + 16));
        //        }

        // ******************************************************************************************************************************************************************

        function ScreenSize() {
            var a = 100;
            var w = window;
            var d = document;
            var e = d.documentElement;
            var g = d.getElementsByTagName('body')[0];
            var sx = w.innerWidth || e.clientWidth || g.clientWidth;
            var sy = w.innerHeight || e.clientHeight || g.clientHeight;
            return {
                x: sx,
                y: sy
            }
        }
        var floorTree = new sap.ui.commons.Tree("tree", {
            title: "FloorMaps",
            width: "100%",
            height: (ScreenSize()['y'] - 120) + 'px',
            showHeaderIcons: true,
            showHorizontalScrollbar: true,
            showHeader: true,
            selectionMode: sap.ui.commons.TreeSelectionMode.Single,
            select: function (oControlEvent) {
                treeIndex = parseInt(oControlEvent.getParameters().node.getId().substring(oControlEvent.getParameters().node.getId().indexOf("_") + 1));
                var name = treeArray[treeIndex]['unitName'];
                var id = treeArray[treeIndex]['recordID'];
                // 			sap.ui.getCore().byId("mTableLabel").setText(name + " (ID: " + id + " )");
                // 			TableRef(id, name);
                // 			ss(oControlEvent.getParameters().node.getText());
                // 			ss(oeeStatus(oControlEvent.getParameters().node.getText()));
                cc(oControlEvent.getParameters().node.getText());
                var n = oControlEvent.getParameters().node;
                if (n.getNodes().length == 0) {
                    return;
                } else {
//                mapInit(n);
                }
//                if (oeeStatus(oControlEvent.getParameters().node.getText()) == 0) {
//                    chartReady = false;
//                    barChartInit(oControlEvent.getParameters().node);
//                } else {
//                    lineChartTest(oControlEvent.getParameters().node.getText());
//                }
                //

            },
            selectionChange: function (oControlEvent) {
                // 			ss('selectionChange');
            }
        });
        function floorTreeInit() {

            var P1 = "SELECT *";
            var P2 = "FROM MESM_FloorMaps";
            var P3 = "ORDER BY idUnitParent";
            var P4 = "";
            var url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&Param.4=" + P4 + "&Content-Type=text/xml";
//            ss(url);
            if (mockServer) {
                url = 'mockServer/MESM_FloorMaps.xml';
            }

            //ss(url);
            getData(url, parseJsonParent);

            function parseJsonParent(jsondata) {
                treeArray = [];
                TreeNodes = new Array(jsondata.length);
                $.each(jsondata, function (i, _jsondata) {
                    treeArray.push({
                        unitName: _jsondata['unitName'],
                        recordID: _jsondata['recordID'],
                        unitType: _jsondata['unitType'],
                        idUnitParent: _jsondata['idUnitParent'],
                        oeeStatus: _jsondata['oeeStatus']
                    });
                    var _icon = "";

                    TreeNodes[i] = new sap.ui.commons.TreeNode("floorTree_" + i, {
                        text: _jsondata['unitName'],
                        icon: _icon,
                        expanded: true
                    });
                    floorTree.addNode(TreeNodes[i]);
                });

                $.each(TreeNodes, function (i, m) {
                    $.each(TreeNodes, function (j, n) {
                        if (i != j) {
                            if (treeArray[j]['idUnitParent'] == treeArray[i]['recordID']) {
                                m.addNode(n);
                            }
                            if (treeArray[i]['idUnitParent'] == treeArray[j]['recordID']) {
                                n.addNode(m);
                            }
                        }
                    });
                });
                floorTree.placeAt("nav");
                // 			barChartInit(getNodeByText('2100 DOC'));
                // 			barChartInit(floorTree.getNodes()[0]);
                // 			cc(oeeChart);
                floorTreeReady = true;
                // 			nn = getNodeByText('2110 SCR 1');
                // 			ss(findParent(nn).getText());
                //cc(floorTree);
            }

        }
        // ******************************************************************************************************************************************************************

        function oeeStatus(_s) {
            var status;
            $.each(treeArray, function (i, _treeArray) {
                if (_treeArray['unitName'] == _s) {
                    status = _treeArray['oeeStatus'];
                    return false;
                }

            });
            return status;
        }
        // ******************************************************************************************************************************************************************

        function getBranch(node, tArray) {
            tArray.push(node);
            if (node.getNodes().length == 0) {

            } else {
                $.each(node.getNodes(), function (i, _node) {
                    getBranch(_node, tArray);
                });
            }
        }

        function getNodeByText(text) {
            var node;
            $.each(TreeNodes, function (i, treeNode) {
                // 			cc(_treeNodes.getText());
                if (treeNode.getText() == text) {
                    node = treeNode;
                    return false;
                }
            });
            return node;
        }

        // 	function getChildren(node) {
        // 		var o = [];
        // 		if (node.getNodes().length == 0) {
        // 			return null;
        // 		}
        // 		$.each(node.getNodes(), function(i, child) {
        // 			o.push(child);
        // 		});
        // 		return o;
        // 	}

        function findParent(node) {
            var parent;
            var allNodes = [];
            getBranch(floorTree.getNodes()[0], allNodes);
            // 		ss(allNodes.length);
            $.each(allNodes, function (i, _node) {
                // 			ss(_node.getText());
                if (_node.getNodes().length > 0) {
                    $.each(_node.getNodes(), function (i, mm) {
                        if (mm.getText() == node.getText()) {
                            // 						ss(_node.getText());
                            parent = _node;
                            return false;
                        }
                    });
                }
            });
            return parent;
        }

        //***********************************************************
        function reportDataLoad() { // Bind the table rows to this model
            P1 = "SELECT *";
            P2 = "FROM OEEM_Data_Collection";
            P3 = "ORDER BY Timestamp DESC";
            P4 = "";
            var url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&Param.4=" + P4 + "&ts=" + new Date().getTime()
                + "&Content-Type=text/xml";
//        ss(url);
            if (mockServer) {
                url = 'mockServer/OEEM_Data_Collection.xml';
            }
            reportXMLModel.loadData(url, "", false);
            ReprotsLoad();
//            getData(url, parseJsonParent);
//            function parseJsonParent(jsondata) {
//                reportJSONModel.setData(jsondata);
//                // 			mTableSelectedIndex = -1;
//                // 			OEEM_Array = [];
//
//                //			for (var i = 0; i < jsondata.length; i++) {
//                for (var i = 0; i < jsondata.length; i++) {
//                    // 				OEEM_Array.push({
//                    // 					recordID : jsondata[i]['recordID'],
//                    // 					Timestamp : jsondata[i]['Timestamp'],
//                    // 					Description : jsondata[i]['Description'],
//                    // 					OEE_Availability : jsondata[i]['OEE_Availability'],
//                    // 					OEE_Performance : jsondata[i]['OEE_Performance'],
//                    // 					OEE_Quality : jsondata[i]['OEE_Quality'],
//                    // 					OEE_OEE : jsondata[i]['OEE_OEE'],
//
//                    // 				});
//                    //d = new Date(parseInt(jsondata[i]['Timestamp']));
//
//                    jsondata[i]['Timestamp'] = new Date(parseInt(jsondata[i]['Timestamp'])).toLocaleString();
//                }
//                ReprotsLoad();
//            }


        }

        // 	rpJSONModel.setData({
        // 		firstName : "Peter",
        // 		lastName : "Pan"
        // 	});

        function createViewer() {
            // Specify necessary options for the viewer
            var options = new Stimulsoft.Viewer.StiViewerOptions();
            options.height = "100%";
            options.appearance.scrollbarsMode = true;
            options.toolbar.showDesignButton = true;
            options.appearance.interfaceType = Stimulsoft.Viewer.StiInterfaceType.Mouse;
            options.appearance.htmlRenderMode = Stimulsoft.Report.Export.StiHtmlExportMode.Table;

            // Create an instance of the viewer
            reportViewer = new Stimulsoft.Viewer.StiViewer(options, "StiViewer", false);

            // Add the design button event
            reportViewer.onDesignReport = function (e) {
                this.visible = false;
                if (reportDesigner == null) {
                    createDesigner(e);
                } else {
                    reportDesigner.visible = true;
                    reportDesigner.report = e.report;
                    // 				ga('set', {
                    // 					page : '/designer_' + designer.report.reportName,
                    // 					title : 'Designer ' + designer.report.reportName
                    // 				});
                    // 				ga('send', 'pageview');
                }
            };
            reportViewer.renderHtml("viewerContent");
        }

        function createDesigner(e) {
            // 		centerWheel(true);
            // 		zip
            // 				.installJS(
            // 						"designer.zip",
            // 						[ "stimulsoft.designer.js" ],
            // 						function() {
            // 		hideWhell();
            var options = new Stimulsoft.Designer.StiDesignerOptions();
            options.appearance.fullScreenMode = true;
            options.appearance.interfaceType = Stimulsoft.Designer.StiInterfaceType.Mouse;
            options.appearance.htmlRenderMode = Stimulsoft.Report.Export.StiHtmlExportMode.Table;

            // Create an instance of the designer
            reportDesigner = new Stimulsoft.Designer.StiDesigner(options, "StiDesigner", false);

            // Add the exit menu item event
            reportDesigner.onExit = function (e) {
                this.visible = false;
                reportViewer.visible = true;

            }
            reportDesigner.renderHtml("designerContent");
            reportDesigner.visible = true;
            reportDesigner.report = e.report;
            // 		ga('set', {
            // 			page : '/designer_' + designer.report.reportName,
            // 			title : 'Designer ' + designer.report.reportName
            // 		});
            // 		ga('send', 'pageview');
            // 						});
        }

        function setReport(reportObject) {
            // Forcibly show process indicator
            reportViewer.showProcessIndicator();

            // Timeout need for immediate display loading report indicator
//        setTimeout(function () {
            // Create a new report instance
            reportOne = new Stimulsoft.Report.StiReport();
            // Load reports from JSON object
            // 			report.loadFile("Reports/" + reportObject.id + ".mrt");
            reportOne.loadFile(reportObject);
            // Remove all connections from the report template
            reportOne.dictionary.databases.clear();
            // Register DataSet object
//            reportOne.regData("DEMO", "DEMO", demoDataSet);
//            reportOne.regData("jsonDataSource", "jsonDataSource", jsonDataSet);
            reportOne.regData("xmlDataSource", "xmlDataSource", xmlDataSet);

            // Assign the report to the viewer
            reportViewer.report = reportOne;

            // 			ga('set', {
            // 				page : '/viewer_' + viewer.getReportFileName(),
            // 				title : 'Viewer ' + viewer.getReportFileName()
            // 			});
            // 			ga('send', 'pageview');
//        }, 10000);
        }


        function ReprotsLoad() {
            // 		var js = {};
            window.addEventListener("resize", function (event) {
                centerWheel(false);
            });
            // 		centerWheel(true);
            // 		zip.installJS("lib.zip", [ "stimulsoft.reports.js",
            // 				"stimulsoft.viewer.js", "demo.js" ], function() {
            // 			hideWhell();
            showViewer();
            // 		});
        }

        // Load first report after the page is loaded
        function showViewer() {
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/ar.xml", false, "Arabic");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/be.xml", false, "Belarusian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/bg.xml", false, "Bulgarian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/ca-ES.xml", false, "Catalan");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/cs.xml", false, "Czech");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/de.xml", false, "Deutsch");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/el-GR.xml", false, "Greek");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/es.xml", false, "Spanish");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/eu-ES.xml", false, "Basque");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/fa.xml", false, "Farsi");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/fr.xml", false, "French");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/gl-ES.xml", false, "Galician");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/hr.xml", false, "Croatian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/hu.xml", false, "Hungarian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/id.xml", false, "Indonesian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/it.xml", false, "Italian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/ka.xml", false, "Georgian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/Lt-sr-SP.xml", false, "Serbian (Latin)");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/lt.xml", false, "Lithuanian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/nb-NO.xml", false, "Norwegian (Bokmål)");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/nl.xml", false, "Dutch");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/pl.xml", false, "Polish");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/pt-BR.xml", false, "Portuguese (Brazil)");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/ro.xml", false, "Romanian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/ru.xml", false, "Russian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/sk.xml", false, "Slovak");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/sv.xml", false, "Swedish");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/tr.xml", false, "Turkish");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/uk.xml", false, "Ukrainian");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/zh-CHS.xml", false, "Chinese (Simplified)");
            Stimulsoft.Base.Localization.StiLocalization.addLocalizationFile("stimulsoft/Localizations/zh-CHT.xml", false, "Chinese (Traditional)");

            // Create new DataSet object
//            demoDataSet = new Stimulsoft.System.Data.DataSet("DEMO");
//            demoDataSet.readJson(demoData);

//            jsonDataSet = new Stimulsoft.System.Data.DataSet("jsonDataSource");
//            jsonDataSet.readJson(reportJSONModel.getJSON());

            xmlDataSet = new Stimulsoft.System.Data.DataSet("xmlDataSource");
            xmlDataSet.readXml(reportXMLModel.getXML());
            // Load JSON data file from specified URL to the DataSet object
//            reportDataSet.readJson(reportJSONModel.getJSON());


            createViewer();
            //selectedButton = document.getElementById("SimpleList");
            // 		onButtonClick(selectedButton, SimpleList);
//            setReport('report_0');
            setReport('stimulsoft/Reports/report_0.mrt');
        }

        function centerWheel(show) {
            //document.getElementById("load_wheel").style.left = (document.getElementById("stLeftPanel").offsetWidth +
            //			(window.innerWidth - document.getElementById("stLeftPanel").offsetWidth) / 2 - 36) + "px";
            document.getElementById("load_wheel").style.left = (window.innerWidth / 2 - 36) + "px";
            if (show)
                showWhell();
        }

        function showWhell() {
            document.getElementById("load_wheel").style.display = "";
        }

        function hideWhell() {
            document.getElementById("load_wheel").style.display = "none";
        }
        function ss(s) {
            alert(s);
        }

        function cc(o) {
            console.log(o);
        }

    </script>
</head>
<body>


<input id="user_roles" type="hidden" value="{IllumLoginRoles}"
       style="display: block; width: 1000px;" readonly/>
<input id="user_role" type="hidden" value="{ROLE}"
       style="display: block; width: 1000px;" readonly/>
<input id="user_name" type="hidden" value="{IllumLoginName}"
       style="display: block; width: 1000px;" readonly/>
<input id="user_height" type="hidden" value="{HEIGHT}"
       style="display: block; width: 100px;" readonly/>
<input id="user_address" type="hidden" value="{Machine}"
       style="display: block; width: 1000px;" readonly/>

<div id="container" class="container">
    <header id="header"></header>
    <menu id="menu"></menu>
    <nav id="nav"></nav>
    <article id="article">
        <div id="p1">
            <div class="js_loader" id="load_wheel"
                 style="position: absolute; z-index: 70000; top: 254px; display: none"></div>
            <div id="designerContent"></div>
            <table class="Main">
                <tr>
                    <td height="800" id="viewerContent"></td>
                </tr>
            </table>

        </div>
        <div id="p2"></div>
    </article>
    <footer id="footer"></footer>
</div>

</body>
<style>
    div.container {
        /* 	border: 1px solid gray; */
        /* 	margin: 0 auto; */
        margin: 0em auto;
        min-width: 1000px;
        width: 100%;
        /* 	margin-top: 100px; */
        /* 	margin-bottom: 100px; */
        /* 	margin-right: 100px; */
        /* 	margin-left: 100px; */
        position: relative;
    }

    header {
        width: 100%;
    }

    nav {
        float: left;
        /* 	min-width: 100px; */
        width: 15%;
        margin: 0px 0px 0px 10%;
        /* 	padding: 1em; */
    }

    nav ul {
        list-style-type: none;
        padding: 0;
    }

    nav ul a {
        text-decoration: none;
    }

    article {
        margin-left: 30%;
        width: 60%;
        /* 	height: 600px; */
        /* 	border-left: 1px solid gray; */
        /* 	padding: 0em; */
        /* 	margin: 0px 10%; */
        /* 	overflow: hidden; */
    }

    footer {
        /* 	margin-left: 30%; */
        /* 	border-left: 1px solid gray; */
        padding: 1em;
        /* 	overflow: hidden; */
    }
</style>


</html>

