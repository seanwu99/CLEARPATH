<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <style>
        div.container {
            /* 	border: 1px solid gray; */
            /* 	margin: 0 auto; */
            margin: 0 auto;
            min-width: 1000px;
            width: 100%;
            /* 	margin-top: 100px; */
            /* 	margin-bottom: 100px; */
            /* 	margin-right: 100px; */
            /* 	margin-left: 100px; */
            position: relative;
        }

        header {
            width: 100%;
        }

        nav {
            float: left;
            /* 	min-width: 100px; */
            width: 15%;
            margin: 0 0 0 10%;
            /* 	padding: 1em; */
        }

        nav ul {
            list-style-type: none;
            padding: 0;
        }

        nav ul a {
            text-decoration: none;
        }

        article {
            margin-left: 30%;
            width: 60%;
            /* 	height: 500px; */
            /* 	border-left: 1px solid gray; */
            /* 	padding: 0em; */
            /* 	margin: 0px 10%; */
            /* 	overflow: hidden; */
        }

        footer {
            /* 	margin-left: 30%; */
            /* 	border-left: 1px solid gray; */
            padding: 1em;
            /* 	overflow: hidden; */
        }
    </style>

    <title>RTS OEEM</title>

    <script id="sap-ui-bootstrap"
            src="https://sapui5.netweaver.ondemand.com/resources/sap-ui-core.js"
            data-sap-ui-theme="sap_bluecrystal"
            data-sap-ui-libs="sap.m,sap.ui.commons,sap.ui.table,sap.ui.core"
            data-sap-ui-language="en">
    </script>
    <script src="Common/js/default.js"></script>
    <script src="Highcharts/highmaps.src.js"></script>
    <script src="Highcharts/modules/data.js"></script>
    <script src="Highcharts/modules/drilldown.js"></script>
    <script src="Highcharts/modules/exporting.js"></script>
    <script src="rts.oeem.ApplicationHeader.js"></script>
    <script src="rts.oeem.MenuBar.js"></script>



    <script>
        // ******************************************************************************************************************************************************************
        var mockServer = true;
        var USERNAME = 'unknown';
        var floorTreeReady = false;
        var treeIndex = 0;
        var treeArray = [];
        var TreeNodes = [];
        var BarChart = null;
        var LineChart = null;
        var mapChart = null;
        // 	var chartRoot = '';

        var ChartType = 'BAR';
        var chartReady = false;
        // 	var lastTitle = [];
        //        var isDrilldown = false;
        var isDrilldown = false;
        var mapJson = null;
        // ******************************************************************************************************************************************************************

        $(function () {
            // 		var vv = new ScreenSize();
            // 		cc(vv);

            // 		ss(new ScreenSize().x);
            USERNAME = document.getElementById("user_name").value;
            ///////////////////////////////////////////////////////////////////////////////////////
            // 		var myRoles = document.getElementById("user_roles").value;
            // 		var role2Access = "OEEM_" + document.getElementById("user_role").value;
            // 		// alert(role2Access);
            // 		if (myRoles.indexOf(role2Access) < 0) {
            // 			window.location.assign("security.irpt");
            // 			return true;
            // 		}
            // 		var roleString = document.getElementById("user_role").value;
            // 		var roleArray = roleString.split("_");
            // 		var level2Access = roleArray[0];
            // 		var plant2Access = roleArray[1];
            ///////////////////////////////////////////////////////////////////////////////////////
            var appHeader = new ApplicationHeader({
                user: USERNAME,
                elm: 'header',
                logoSrc: 'Common/images/logo.png',
                logoText: 'Overall Equipment Effectiveness Module on SAP MII'
            });

            var menuBar = new MenuBar({
                elm: 'menu'
            });

            $.get('map.json', function (data) {
                mapJson = data;
            });

            floorTreeInit();

//            windowHeigth = $(window).height();
//            alert(((windowHeigth - 100) * .6) | 0);


            StopReasons_Table();
            mTable.placeAt("p2");


            setInterval(function () {
//                if (floorTreeReady && mapChart == null) {
//                    mapInit();
//                }
//                cc('main routine');
                if (mapChart == null && floorTreeReady && mapJson != null) {
                    mapInit(floorTree.getNodes()[0]);
                }

            }, 1000);

            var TESTS;
            $('#test1').click(function () {
                mapInit('COLUMBUS SOUTH');
            });

            $('#test2').click(function () {
                lineChartTest();
            });
            $('#test3').click(function () {
                BarChart.series[0].remove();
            });
        });
        // ******************************************************************************************************************************************************************
        var xPage = new sap.ui.core.HTML("pages", {
            content: null,
            afterRendering: function () {
                locked = false;
            }
        });
        var mModelXML = new sap.ui.model.xml.XMLModel();
        var mTable = new sap.ui.table.Table({
            //visibleRowCount : 12,
            //firstVisibleRow : 3,
            //visibleRowCountMode : sap.ui.table.VisibleRowCountMode.Interactive,
            firstVisibleRow: 0,
            selectionBehavior: sap.ui.table.SelectionBehavior.Row,
            selectionMode: sap.ui.table.SelectionMode.Single,
            editable: false,
            enableColumnFreeze: false,
            width: "100%",
            columnHeaderVisible: true,
            enableCustomFilter: false
            //navigationMode : sap.ui.table.NavigationMode.Paginator
        });

        var StopReasons_Data;
        var StopReasons_selectedIndex;

        function StopReasons_Table() { // Bind the table rows to this model
            //load table's data
            P1 = "SELECT *";
            P2 = "FROM MESM_StopReasons";
            P3 = "ORDER BY sortOrder";
            P4 = "";
            var url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&Param.4=" + P4 + "&Content-Type=text/xml";
            if (mockServer) {
                url = 'mockServer/MESM_StopReasons.xml'
            }
            //        alert(url);
            getData(url, parseJsonParent);

            function parseJsonParent(jsondata) {
                //ss(jsondata.length);
                StopReasons_selectedIndex = -1;
                StopReasons_Data = [];
                for (var i = 0; i < jsondata.length; i++) {
                    StopReasons_Data.push({
                        recordID: jsondata[i]['recordID'],
                        reasonName: jsondata[i]['reasonName'],
                        reasonDescr: jsondata[i]['reasonDescr'],
                        reasonActive: jsondata[i]['reasonActive'],
                        sortOrder: jsondata[i]['sortOrder'],
                        catagory: jsondata[i]['catagory'],
                        recordID_FloorMaps: jsondata[i]['recordID_FloorMaps'],
                        unitName_FloorMaps: jsondata[i]['unitName_FloorMaps'],
                        CreatedBy: jsondata[i]['CreatedBy'],
                        CreatedOn: jsondata[i]['CreatedOn']
                    });
                }
                //   alert(StopReasons_Data.length);
            }

            //var timestamp = new Date().getTime();
            // 		url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&ts="
            // 				+ (new Date().getTime()) + "&Content-Type=text/xml";
            //alert(url);
            //url = "mock/Get_Missions.xml"; //Mock request

            mModelXML.loadData(url, "", false);
//            alert(mModelXML.getXML());
            //		createColumns
            mTable.setModel(mModelXML);
            mTable.bindRows("/Rowset/Row");
            mTable.setVisibleRowCount(7);
            mTable.addColumn(new sap.ui.table.Column({
                width: "150px",
                label: new sap.ui.commons.Label({
                    text: " Name"
                }),
                template: new sap.ui.commons.TextView().bindProperty("text", "reasonName"),
                sortProperty: "reasonName",
                filterProperty: "reasonName",
                resizable: true
            }));
            mTable.addColumn(new sap.ui.table.Column({
                width: "auto",
                label: new sap.ui.commons.Label({
                    text: " Description"
                }),
                template: new sap.ui.commons.TextView().bindProperty("text", "reasonDescr"),
                sortProperty: "reasonDescr",
                filterProperty: "reasonDescr",
                resizable: true
            }));
            mTable.addColumn(new sap.ui.table.Column({
                width: "150px",
                label: new sap.ui.commons.Label({
                    text: " unitName"
                }),
                template: new sap.ui.commons.TextView().bindProperty("text", "unitName_FloorMaps"),
                sortProperty: "unitName_FloorMaps",
                filterProperty: "unitName_FloorMaps",
                resizable: true
            }));
//        mTable.addColumn(new sap.ui.table.Column({
//            width : "80px",
//            label : new sap.ui.commons.Label({
//                text : " unitID"
//            }),
//            template : new sap.ui.commons.TextView().bindProperty("text", "recordID_FloorMaps"),
//            sortProperty : "recordID_FloorMaps",
//            filterProperty : "recordID_FloorMaps",
//            resizable : true,
//        }));
            mTable.addColumn(new sap.ui.table.Column({
                width: "150px",
                label: new sap.ui.commons.Label({
                    text: "Catagory"
                }),
                template: new sap.ui.commons.TextView().bindProperty("text", "catagory"),
                sortProperty: "catagory",
                filterProperty: "catagory",
                resizable: true
            }));

            // 		mTable.addColumn(new sap.ui.table.Column({
            // 			width : "80px",
            // 			label : new sap.ui.commons.Label({
            // 				text : "ModifiedBy"
            // 			}),
            // 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedBy"),
            // 			sortProperty : "ModifiedBy",
            // 			filterProperty : "ModifiedBy",
            // 			resizable : true,
            // 		}));
            // 		mTable.addColumn(new sap.ui.table.Column({
            // 			width : "150px",
            // 			label : new sap.ui.commons.Label({
            // 				text : "ModifiedOn"
            // 			}),
            // 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedOn"),
            // 			sortProperty : "ModifiedOn",
            // 			filterProperty : "ModifiedOn",
            // 			resizable : true,
            // 		}));
            mTable.addColumn(new sap.ui.table.Column({
                width: "80px",
                label: new sap.ui.commons.Label({
                    text: " CreatedBy"
                }),
                template: new sap.ui.commons.TextView().bindProperty("text", "CreatedBy"),
                sortProperty: "CreatedBy",
                filterProperty: "CreatedBy",
                resizable: true
            }));

            mTable.addColumn(new sap.ui.table.Column({
                width: "150px",
                label: new sap.ui.commons.Label({
                    text: "CreatedOn"
                }),
                template: new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
                sortProperty: "CreatedOn",
                filterProperty: "CreatedOn",
                resizable: true
            }));
            mTable.addColumn(new sap.ui.table.Column({
                width: "60px",
                label: new sap.ui.commons.Label({
                    text: "Active"
                }),
                template: new sap.ui.commons.CheckBox().bindProperty("checked", "reasonActive", function (s) {
                    return s == "1";
                }),
                resizable: true,
                hAlign: "Center"
            }));

            //		sp = document.getElementById("OEEM_content").clientWidth - 200 - 190;
            mTable.setToolbar(new sap.ui.commons.Toolbar({
                height: "50px",
                items: [new sap.m.Label({
                    desig: sap.m.LabelDesign.Bold,
                    textAlign: sap.ui.core.TextAlign.Center,
                    text: "DOWNTIME REASON DEFs: LINE(A) - WORKCENTER(B) - EQUIPMENT(C)",
                    // 				width : "" + (document.getElementById("OEEM_content").clientWidth - 200 - 400) + "px",
                    height: "30px"
                })],
                rightItems: [new sap.ui.commons.Button("btn_tbOperations_add", {
                    text: "Add",
                    width: "80px",
                    height: "30px",
                    style: "Default",
                    icon: "sap-icon://add",
                    lite: true,
                    press: function () {
                        StopReasons_add("", "add a StopReason");
                    }
                }).setEnabled(true), new sap.ui.commons.Button("btn_tbOperations_edit", {
                    text: "Edit",
                    width: "80px",
                    height: "30px",
                    style: "Default",
                    icon: "sap-icon://edit",
                    lite: true,
                    press: function () {
                        StopReasons_edit("", "edit an operation", true);
                    }
                }), new sap.ui.commons.Button("btn_tbOperations_delete", {
                    text: "Delete",
                    width: "80px",
                    height: "30px",
                    style: "Default",
                    icon: "sap-icon://delete",
                    lite: true,
                    press: function () {
                        StopReasons_edit("", "delete a StopReason", false);
                    }
                })

                    // 			, new sap.ui.commons.MenuButton({
                    // 				height : "30px",
                    // 				width : "40px",
                    // 				//text : "",
                    // 				icon : "sap-icon://menu",
                    // 				lite : true,
                    // 				menu : new sap.ui.unified.Menu({
                    // 					title : "Operation",
                    // 					enabled : true,
                    // 					items : [ new sap.ui.commons.MenuItem("menu_tbOperations_add", {
                    // 						text : "Add",
                    // 						enabled : true,
                    // 					}), new sap.ui.commons.MenuItem("menu_tbOperations_edit", {
                    // 						text : "Edit",
                    // 						enabled : true,
                    // 					}), new sap.ui.commons.MenuItem("menu_tbOperations_delete", {
                    // 						text : "Delete",
                    // 						enabled : true,
                    // 					}) ]
                    // 				}),
                    // 				itemSelected : function(oEvent) {
                    // 					alert("menuOperationMissionitemSelected");
                    // 				}
                    // 			})
                ]
            }));
            // 		var str = location.href;
            // 		mTable.filter(mTable.getColumns()[3], location.href.substring(location.href.indexOf("FloorMaps_Index=") + 16));
        }

        function getPieceByName(mapData, pieceName) {
            var coor = null;
            $.each(mapData['features'], function (i, piece) {
                if (piece['properties']['name'] == pieceName) {
                    coor = piece;
                    return false;
                }
            });
            if (coor != null) {
                return coor['geometry']['coordinates'];
            } else {
                return null;
            }
//            cc(coor['geometry']['coordinates']);

        }


        function mapInit(rootNode) {

//            rootNode = getNodeByText(nodeName);
            if (rootNode.getNodes().length == 0) {
                return;
            }
            var features = [];
            $.each(rootNode.getNodes(), function (i, branchNode) {
                var branch = [];
                getBranch(branchNode, branch);
                //get Branch nodes, push to features
                var pieces = [];
                if (branch.length > 0) {
                    $.each(branch, function (i, _branch) {
                        var coor = getPieceByName(mapJson, _branch.getText());
                        if (coor != null) {
                            pieces.push(coor);
                        }
                    });
                    features.push({
                        type: "Feature",
                        properties: {
                            "hc-key": branchNode.getText(),
                            "name": branchNode.getText()
                        },
                        geometry: {
                            type: "MultiPolygon",
                            coordinates: pieces
                        }
//                            drilldown: true
                    });
                }
            });

            features = {
                "type": 'FeatureCollection',
                "features": features
            };
//                var hd = Highcharts.geojson(features);
//            cc('features');
//            cc(features);
            var mapTop = Highcharts.geojson(features);

            $.each(mapTop, function (i) {
                this.drilldown = this.properties['name'];
                this.value = 50 + Math.round((Math.random() * 50));
            });
            mapChart = new Highcharts.Map('p1', {
                chart: {
                    height: ScreenSize()['y'],
                    events: {
                        redraw: function () {
//                                cc('redraw');
                        },
                        drilldown: function (e) {
                            cc('drilldown');
                            var mapDrilldown;

                            isDrilldown = true;
                            if (!e.seriesOptions) {
//                                var chart = this;

//                                cc('drilldown');
//                                cc(e);
                                // 							ss(e.point.name)
//                                var ePointName = e.point.name;
                                // 							lastTitle.push(BarChart.options.title['text']);
                                this.title.update({
                                    text: e.point.name
                                });

                                var ePoint = getNodeByText(e.point.name);
//                                cc('ePoint');
//                                cc(ePoint.getText());
                                if (ePoint.getNodes().length == 0) {
                                    cc('(ePoint.getNodes().length');
                                    cc(ePoint.getNodes().length);
                                    // 								ss('lineChartTest ?!');
//                                        lineChartTest(pn);
                                    cc('ePoint.getNodes().length == 0');
                                    isDrilldown = false;
                                    return;
                                }

                                // 							tts = getChildren(node);
//                                    var oeeData = [];
//                                    var availabilityData = [];
//                                    var performanceData = [];
//                                    var qualityData = [];
//                                    $.each(node.getNodes(), function (i, child) {
//                                        oeeData.push({
//                                            name: child.getText(),
//                                            y: 60 + Math.round((Math.random() * 40)),
//                                            drilldown: true
//                                        });
//                                        availabilityData.push({
//                                            name: child.getText(),
//                                            y: 60 + Math.round((Math.random() * 40)),
//                                            drilldown: true
//                                        });
//                                        performanceData.push({
//                                            name: child.getText(),
//                                            y: 60 + Math.round((Math.random() * 40)),
//                                            drilldown: true
//                                        });
//                                        qualityData.push({
//                                            name: child.getText(),
//                                            y: 60 + Math.round((Math.random() * 40)),
//                                            drilldown: true
//                                        });
//                                    });

                                if (ePoint.getNodes()[0].getNodes().length == 0) {
                                    var features = [];
                                    $.each(ePoint.getNodes(), function (i, branchNode) {
                                        var branch = [];
                                        getBranch(branchNode, branch);

//                                        cc(branchNode.getText());
//                                        if (branch.length > 0) {
                                        var pieces = [];
                                        $.each(branch, function (i, _branch) {
                                            var coor = getPieceByName(mapJson, _branch.getText());
                                            if (coor != null) {
                                                pieces.push(coor);
                                            }
                                        });
                                        features.push({
                                            type: "Feature",
                                            properties: {
                                                "hc-key": branchNode.getText(),
                                                "name": branchNode.getText()
                                            },
                                            geometry: {
                                                type: "MultiPolygon",
                                                coordinates: pieces
                                            }
                                        });
//                                        }
                                    });
                                    features = {
                                        "type": 'FeatureCollection',
                                        "features": features,
                                    };
//                                    cc('features');
//                                    cc(features);
                                    mapDrilldown = Highcharts.geojson(features);

                                    $.each(mapDrilldown, function (i) {
//                                        this.drilldown = this.properties['name'];
                                        this.value = 50 + Math.round((Math.random() * 50));
                                    });
//                                    cc(mapDrilldown);
//                                        var OEE = {
//                                            name: 'OEE',
//                                            colorByPoint: true,
//                                            data: oeeData,
//                                        };
                                    // 								var Availability = {
                                    // 									name : 'Availability',
                                    // 									colorByPoint : true,
                                    // 									data : availabilityData,
                                    // 								};
                                    // 								var Performance = {
                                    // 									name : 'Performance',
                                    // 									colorByPoint : true,
                                    // 									data : performanceData,
                                    // 								};
                                    // 								var Quality = {
                                    // 									name : 'Quality',
                                    // 									colorByPoint : true,
                                    // 									data : qualityData,
                                    // 								};
                                    // 									setTimeout(function() {
                                    // 										chart.hideLoading();
                                    this.addSingleSeriesAsDrilldown(e.point, {
                                        name: e.point.name,
                                        data: mapDrilldown,
                                        dataLabels: {
                                            enabled: true,
                                            format: '{point.name}'
                                        },


                                    });
//                                    //add markers
                                    if (e.point.name == '2140 DPF 1') {
//                                        cc(e.point);

                                        this.addSingleSeriesAsDrilldown(e.point, {
                                            "type": "mappoint",
                                            "name": "OPs",
                                            "dataLabels": {
                                                "enabled": true
                                            },
                                            "data": [{
                                                "name": "op1",
                                                "x": 60,
                                                "y": 60,
                                                "marker": {
                                                    "symbol": "url(Common/images/op1.png)"
                                                },
                                            }, {
                                                "name": "op2",
                                                "x": 161,
                                                "y": 60,
                                                "marker": {
                                                    "symbol": "url(Common/images/op1.png)"
                                                },
                                            }, {
                                                "name": "op3",
                                                "x": 233,
                                                "y": 60,
                                                "marker": {
                                                    "symbol": "url(Common/images/op1.png)"
                                                },
                                            }, {
                                                "name": "op4",
                                                "x": 330,
                                                "y": 60,
                                                "marker": {
                                                    "symbol": "url(Common/images/op1.png)"
                                                },
                                            }, {
                                                "name": "forklift 1",
                                                "x": 60,
                                                "y": 140,
                                                "marker": {
                                                    "symbol": "url(Common/images/forklift.png)"
                                                },
                                            }, {
                                                "name": "millwright",
                                                "x": 180,
                                                "y": 140,
                                                "marker": {
                                                    "symbol": "url(Common/images/op2.png)"
                                                },
                                            }, {
                                                "name": "forklift 2",
                                                "x": 330,
                                                "y": 140,
                                                "marker": {
                                                    "symbol": "url(Common/images/forklift.png)"
                                                }
                                            }]
                                        });
                                    }

                                    this.applyDrilldown();
//                                    this.addSeriesAsDrilldown(e.point, {
//                                        name: e.point.name,
//                                        data: mapDrilldown,
//                                        dataLabels: {
//                                            enabled: true,
//                                            format: '{point.name}'
//                                        },
//
//
//                                    });

                                    // 			colors: [ '#7cb5ec', '#434348', '#90ed7d', '#f7a35c', '#8085e9', '#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1' ]

//                                        var OEE = {
//                                            name: 'OEE',
//                                            colorByPoint: false,
//                                            color: '#7cb5ec',
//                                            data: oeeData,
//                                        };
//                                        var Availability = {
//                                            name: 'Availability',
//                                            colorByPoint: false,
//                                            color: '#434348',
//                                            data: availabilityData,
//                                        };
//                                        var Performance = {
//                                            name: 'Performance',
//                                            colorByPoint: false,
//                                            color: '#90ed7d',
//                                            data: performanceData,
//                                        };
//                                        var Quality = {
//                                            name: 'Quality',
//                                            colorByPoint: false,
//                                            color: '#f7a35c',
//                                            data: qualityData,
//                                        };
//                                        // 									setTimeout(function() {
//                                        // 										chart.hideLoading();
//                                        chart.addSingleSeriesAsDrilldown(e.point, OEE);
//                                        chart.addSingleSeriesAsDrilldown(e.point, Availability);
//                                        chart.addSingleSeriesAsDrilldown(e.point, Performance);
//                                        chart.addSingleSeriesAsDrilldown(e.point, Quality);

                                } else {
                                    var features = [];
                                    $.each(ePoint.getNodes(), function (i, branchNode) {
                                        var branch = [];
                                        getBranch(branchNode, branch);

//                                        cc(branchNode.getText());
//                                        if (branch.length > 0) {
                                        var pieces = [];
                                        $.each(branch, function (i, _branch) {
                                            var coor = getPieceByName(mapJson, _branch.getText());
                                            if (coor != null) {
                                                pieces.push(coor);
                                            }
                                        });
                                        features.push({
                                            type: "Feature",
                                            properties: {
                                                "hc-key": branchNode.getText(),
                                                "name": branchNode.getText()
                                            },
                                            geometry: {
                                                type: "MultiPolygon",
                                                coordinates: pieces
                                            }
                                        });
//                                        }
                                    });
                                    features = {
                                        "type": 'FeatureCollection',
                                        "features": features
                                    };
//                                    cc('features');
//                                    cc(features);
                                    mapDrilldown = Highcharts.geojson(features);
                                    $.each(mapDrilldown, function (i) {
                                        this.drilldown = this.properties['name'];
                                        this.value = 50 + Math.round((Math.random() * 50));
                                    });
//                                    cc(mapDrilldown);
//                                        var OEE = {
//                                            name: 'OEE',
//                                            colorByPoint: true,
//                                            data: oeeData,
//                                        };
                                    // 								var Availability = {
                                    // 									name : 'Availability',
                                    // 									colorByPoint : true,
                                    // 									data : availabilityData,
                                    // 								};
                                    // 								var Performance = {
                                    // 									name : 'Performance',
                                    // 									colorByPoint : true,
                                    // 									data : performanceData,
                                    // 								};
                                    // 								var Quality = {
                                    // 									name : 'Quality',
                                    // 									colorByPoint : true,
                                    // 									data : qualityData,
                                    // 								};
                                    // 									setTimeout(function() {
                                    // 										chart.hideLoading();
                                    this.addSingleSeriesAsDrilldown(e.point, {
                                        name: e.point.name,
                                        data: mapDrilldown,
                                        dataLabels: {
                                            enabled: true,
                                            format: '{point.name}'
                                        }
                                    });

//                                    chart.addSingleSeriesAsDrilldown(e.point, ePointDrilldown);
                                    // 								chart.addSingleSeriesAsDrilldown(e.point, Availability);
                                    // 								chart.addSingleSeriesAsDrilldown(e.point, Performance);
                                    // 								chart.addSingleSeriesAsDrilldown(e.point, Quality);
                                    this.applyDrilldown();

                                }
                            }
                        },
                        drillup: function (e) {
                            this.setTitle({
                                text: findParent(getNodeByText(e.seriesOptions.data[0].name)).getText()
                            });
                            isDrilldown = false;
                        },
                        load: function () {
                        }
                    }
                },
                lang: {
//                    drillUpText: " << Back to {series.name}"
                    drillUpText: " << Back"
                },
                exporting: {
                    enabled: false
                },
                credits: {
                    enabled: false,
                    href: 'http://www.rtsperfectplant.com/',
                    position: {
                        align: 'right',
                        x: -10,
                        verticalAlign: 'bottom',
                        y: -5
                    },

                    style: {
                        cursor: 'pointer',
                        color: '#999999',
                        fontSize: '9px'
                    },

                    text: 'RTS Consulting Inc.'
                },
                title: {
                    text: rootNode.getText()
                },
//                subtitle : {
//                    text : 'Shop Floor',
//                    floating : false,
//                    align : 'center',
//                    y : 50,
//                    style : {
//                        fontSize : '16px'
//                    }
//                },
                legend: {
                    enabled: false,
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle'
                },
//                xAxis: {
//                    crosshair: {
//                        zIndex: 5,
//                        dashStyle: 'dot',
//                        snap: false,
//                        color: 'gray'
//                    }
//                },
//
//                yAxis: {
//                    crosshair: {
//                        zIndex: 5,
//                        dashStyle: 'dot',
//                        snap: false,
//                        color: 'gray'
//                    }
//                },
                colorAxis: {
                    showInLegend: false,
                    min: 0,
                    minColor: '#E6E7E8',
                    maxColor: '#005645'
                },
                mapNavigation: {
                    enabled: true,
                    buttonOptions: {
                        verticalAlign: 'bottom'
                    }
                },
                plotOptions: {
                    map: {
                        states: {
                            hover: {
                                color: '#EEDD66'
                            }
                        }
                    },
                    series: {
                        point: {
                            events: {
                                click: function () {
//                                    mapLevel1Refresh = new Date().getTime();
                                },
                                mouseOver: function () {
                                    //alert('mouseOver');
//                                    mapLevel1Refresh = new Date().getTime();

                                },
                                mouseOut: function () {
                                    //alert('mouseOut');
//                                    mapLevel1Refresh = new Date().getTime();

                                }
                            }
                        }
                    }
                },
                series: [{
                    animation: {
                        duration: 1000
                    },
                    data: mapTop,
                    name: "series's name",
                    dataLabels: {
                        enabled: true,
                        align: 'center',
                        verticalAlign: 'middle',
                        format: '{point.properties.name}'
                    }
                }],
                drilldown: {
                    //series: drilldownSeries,
                    activeDataLabelStyle: {
                        color: '#FFFFFF',
                        textDecoration: 'none',
                        textShadow: '0 0 0px #000000'
                    },
                    drillUpButton: {
                        relativeTo: 'spacingBox',
                        position: {
                            x: 0,
                            y: 60
                        }
                    }
                }
            });
//            });
//            return;

//            nWorkCenters = 5;
//            var mapLevel1 = new Array(nWorkCenters + 1);
//            var mapLevel1Refresh = new Date().getTime(), mapLevel1Cycle = 5 * 1000, mapLeve11Detail = false, mapLeve11DetailRefresh = new Date().getTime(), mapLevel1DetailCycle = 2 * 1000;
//            var mapLevel2, mapLevelDetailCycle = 1 * 1000, mapLevel2Refresh = new Date().getTime(), mapLevel2Cycle = 1 * 1000;
//            var drilling = false;
//            mapLevel1[0] = Highcharts.geojson(Highcharts.maps['ShopFloor']);
            // Some responsiveness

//            $.each(mapLevel1[0], function (i) {
//                this.drilldown = this.properties['hc-key'];
//                this.value = randomBogusData(20, 80); // random bogus data
//            });


        }
        function randomBogusData(a, b) {
            return parseInt(a + b * Math.random());

        }
        function dataAdd2Table(_Timestamp, _Unit_Name, _UnitID, _Operator, _OEE_Availability, _OEE_Performance, _OEE_Quality, _OEE_OEE) {
            var P1 = _Timestamp;
            var P2 = _Unit_Name;
            var P3 = _UnitID;
            var P4 = _Operator;
            var P5 = _OEE_Availability;
            var P6 = _OEE_Performance;
            var P7 = _OEE_Quality;
            var P8 = _OEE_OEE;

            var oReqData;
            if (window.XMLHttpRequest) {
                oReqData = new XMLHttpRequest();
            }
            //alert();
            if (oReqData != null) {
                var timestamp = new Date().getTime();
                var paramStr = "Param.1=" + encodeURIComponent(P1) + "&Param.2=" + encodeURIComponent(P2) + "&Param.3=" + encodeURIComponent(P3) + "&Param.4=" + encodeURIComponent(P4) + "&Param.5=" + encodeURIComponent(P5) + "&Param.6="
                    + encodeURIComponent(P6) + "&Param.7=" + encodeURIComponent(P7) + "&Param.8=" + encodeURIComponent(P8);
                // alert(paramStr);
                var queryStr = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/OEEM_Data_Collection_ADD&" + paramStr + "&ts=" + timestamp + "&Content-Type=text/xml";
                //alert(queryStr);
                oReqData.open("GET", queryStr, true);
                oReqData.onreadystatechange = function () {
                    if (oReqData.readyState == 4)
                        if (oReqData.status == 200) {
                            //alert("doAddMission");
                            tableRefresh();
                        } else {
                            // Not Successful -- alert the user
                            alert("unSuccessful Error: " + oReqData.statusText);
                        }
                };
                oReqData.send();
            } else {
                window.alert("Error creating XmlHttpRequest object.");
            }

        }

        function tableRefresh() {

            if (treeArray[treeIndex]['oeeStatus'] == 1) {

                var P1 = "SELECT *";
                var P2 = "FROM OEEM_Data_Collection";
                var P3 = "WHERE UnitID=" + treeArray[treeIndex]['recordID'];
                var P4 = "ORDER BY Timestamp DESC";
                var url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&Param.4=" + P4 + "&Content-Type=text/xml";

                oeeXmModel.loadData(url);

                oeeTable.setModel(oeeXmModel);
            }
        }

        // ******************************************************************************************************************************************************************

        function ScreenSize() {
            var a = 100;
            var w = window;
            var d = document;
            var e = d.documentElement;
            var g = d.getElementsByTagName('body')[0];
            var sx = w.innerWidth || e.clientWidth || g.clientWidth;
            var sy = w.innerHeight || e.clientHeight || g.clientHeight;
            return {
                x: sx,
                y: sy
            }
        }

        var floorTree = new sap.ui.commons.Tree("tree", {
            title: "FloorMaps",
            width: "100%",
            height: (ScreenSize()['y'] - 120) + 'px',
            showHeaderIcons: true,
            showHorizontalScrollbar: true,
            showHeader: true,
            selectionMode: sap.ui.commons.TreeSelectionMode.Single,
            select: function (oControlEvent) {
                treeIndex = parseInt(oControlEvent.getParameters().node.getId().substring(oControlEvent.getParameters().node.getId().indexOf("_") + 1));
                var name = treeArray[treeIndex]['unitName'];
                var id = treeArray[treeIndex]['recordID'];
                // 			sap.ui.getCore().byId("mTableLabel").setText(name + " (ID: " + id + " )");
                // 			TableRef(id, name);
                // 			ss(oControlEvent.getParameters().node.getText());
                // 			ss(oeeStatus(oControlEvent.getParameters().node.getText()));
                cc(oControlEvent.getParameters().node.getText());
                var n = oControlEvent.getParameters().node;
                if (n.getNodes().length == 0) {
                    return;
                } else {
                    mapInit(n);
                }
//                if (oeeStatus(oControlEvent.getParameters().node.getText()) == 0) {
//                    chartReady = false;
//                    barChartInit(oControlEvent.getParameters().node);
//                } else {
//                    lineChartTest(oControlEvent.getParameters().node.getText());
//                }
                //

            },
            selectionChange: function (oControlEvent) {
                // 			ss('selectionChange');
            }
        });

        // ******************************************************************************************************************************************************************
        function floorTreeInit() {

            var P1 = "SELECT *";
            var P2 = "FROM MESM_FloorMaps";
            var P3 = "ORDER BY idUnitParent";
            var P4 = "";
            var url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&Param.4=" + P4 + "&Content-Type=text/xml";
//            ss(url);
            if (mockServer) {
                url = 'mockServer/MESM_FloorMaps.xml';
            }

            //ss(url);
            getData(url, parseJsonParent);

            function parseJsonParent(jsondata) {
                treeArray = [];
                TreeNodes = new Array(jsondata.length);
                $.each(jsondata, function (i, _jsondata) {
                    treeArray.push({
                        unitName: _jsondata['unitName'],
                        recordID: _jsondata['recordID'],
                        unitType: _jsondata['unitType'],
                        idUnitParent: _jsondata['idUnitParent'],
                        oeeStatus: _jsondata['oeeStatus']
                    });
                    var _icon = "";

                    TreeNodes[i] = new sap.ui.commons.TreeNode("floorTree_" + i, {
                        text: _jsondata['unitName'],
                        icon: _icon,
                        expanded: true
                    });
                    floorTree.addNode(TreeNodes[i]);
                });

                $.each(TreeNodes, function (i, m) {
                    $.each(TreeNodes, function (j, n) {
                        if (i != j) {
                            if (treeArray[j]['idUnitParent'] == treeArray[i]['recordID']) {
                                m.addNode(n);
                            }
                            if (treeArray[i]['idUnitParent'] == treeArray[j]['recordID']) {
                                n.addNode(m);
                            }
                        }
                    });
                });
                floorTree.placeAt("nav");
                // 			barChartInit(getNodeByText('2100 DOC'));
                // 			barChartInit(floorTree.getNodes()[0]);
                // 			cc(oeeChart);
                floorTreeReady = true;
                // 			nn = getNodeByText('2110 SCR 1');
                // 			ss(findParent(nn).getText());
                //cc(floorTree);
            }

        }
        // ******************************************************************************************************************************************************************

        function oeeStatus(_s) {
            var status;
            $.each(treeArray, function (i, _treeArray) {
                if (_treeArray['unitName'] == _s) {
                    status = _treeArray['oeeStatus'];
                    return false;
                }

            });
            return status;
        }
        // ******************************************************************************************************************************************************************

        function getBranch(node, tArray) {
            tArray.push(node);
            if (node.getNodes().length == 0) {

            } else {
                $.each(node.getNodes(), function (i, _node) {
                    getBranch(_node, tArray);
                });
            }
        }

        function getNodeByText(text) {
            var node;
            $.each(TreeNodes, function (i, treeNode) {
                // 			cc(_treeNodes.getText());
                if (treeNode.getText() == text) {
                    node = treeNode;
                    return false;
                }
            });
            return node;
        }

        // 	function getChildren(node) {
        // 		var o = [];
        // 		if (node.getNodes().length == 0) {
        // 			return null;
        // 		}
        // 		$.each(node.getNodes(), function(i, child) {
        // 			o.push(child);
        // 		});
        // 		return o;
        // 	}

        function findParent(node) {
            var parent;
            var allNodes = [];
            getBranch(floorTree.getNodes()[0], allNodes);
            // 		ss(allNodes.length);
            $.each(allNodes, function (i, _node) {
                // 			ss(_node.getText());
                if (_node.getNodes().length > 0) {
                    $.each(_node.getNodes(), function (i, mm) {
                        if (mm.getText() == node.getText()) {
                            // 						ss(_node.getText());
                            parent = _node;
                            return false;
                        }
                    });
                }
            });
            return parent;
        }
        // ******************************************************************************************************************************************************************
        var oeeArray = [];
        var oeeXmModel = new sap.ui.model.xml.XMLModel();
        var oeeTable = new sap.ui.table.Table({
            //visibleRowCount : 12,
            //firstVisibleRow : 3,
            //visibleRowCountMode : sap.ui.table.VisibleRowCountMode.Interactive,
            //navigationMode : sap.ui.table.NavigationMode.Paginator,
            firstVisibleRow: 0,
            selectionBehavior: sap.ui.table.SelectionBehavior.Row,
            selectionMode: sap.ui.table.SelectionMode.Single,
            editable: false,
            enableColumnFreeze: false,
            width: "100%",
            columnHeaderVisible: true,
            enableCustomFilter: false
        });
        // ******************************************************************************************************************************************************************
        function oeeTableInit() { // Bind the table rows to this model

            P1 = "SELECT *";
            P2 = "FROM OEEM_Data_Collection";
            P3 = "ORDER BY Timestamp DESC";
            P4 = "";
            url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&Param.4=" + P4 + "&ts=" + new Date().getTime() + "&Content-Type=text/xml";
            if (mockServer) {
                url = 'mockServer/OEEM_Data_Collection.xml';
            }
            //  alert(url);
            getData(url, parseJsonParent);
            function parseJsonParent(jsondata) {
                oeeArray = [];
                for (var i = 0; i < jsondata.length; i++) {
                    oeeArray.push({
                        recordID: jsondata[i]['recordID'],
                        Timestamp: jsondata[i]['Timestamp'],
                        Description: jsondata[i]['Description'],
                        OEE_Availability: jsondata[i]['OEE_Availability'],
                        OEE_Performance: jsondata[i]['OEE_Performance'],
                        OEE_Quality: jsondata[i]['OEE_Quality'],
                        OEE_OEE: jsondata[i]['OEE_OEE']

                    });
                }
            }

            //var timestamp = new Date().getTime();
            // 		url = "/XMII/Illuminator?QueryTemplate=OEEM/MANAGEMENT/QUERIES/StopReasons_get&ts=" + (new Date().getTime())
            // 				+ "&Content-Type=text/xml";
            //alert(url);
            //url = "mock/Get_Missions.xml"; //Mock request

            oeeXmModel.loadData(url);
            //alert(oeeXmModel.getXML());
            //		createColumns
            oeeTable.setModel(oeeXmModel);
            oeeTable.bindRows("/Rowset/Row");
            oeeTable.setVisibleRowCount(6);
            oeeTable.addColumn(new sap.ui.table.Column({
                width: "200px",
                label: new sap.ui.commons.Label({
                    text: "Product Name",
                    textAlign: sap.ui.core.TextAlign.Center
                }),
                template: new sap.ui.commons.TextView().bindProperty("text", "Product_Name"),
                // 			sortProperty : "Timestamp",
                // 			filterProperty : "Timestamp",
                resizable: false,
                hAlign: "Center"
            }));
            oeeTable.addColumn(new sap.ui.table.Column({
                width: "160px",
                label: new sap.ui.commons.Label({
                    text: " Timestamp",
                    textAlign: sap.ui.core.TextAlign.Center
                }),
                template: new sap.ui.commons.TextView().bindProperty("text", "Timestamp", function (ts) {
                    return (new Date(parseInt(ts))).toLocaleString();
                }),
                // 			sortProperty : "Timestamp",
                // 			filterProperty : "Timestamp",
                resizable: false
            }));
            oeeTable.addColumn(new sap.ui.table.Column({
                width: "105px",
                // 			hAlign : 'Right',
                label: new sap.ui.commons.Label({
                    text: " OEE",
                    textAlign: sap.ui.core.TextAlign.Center
                }),
                template: new sap.ui.commons.TextView({
                    textAlign: sap.ui.core.TextAlign.Right
                }).bindProperty("text", "OEE_OEE", function (s) {
                    return s + "%";
                }),
                // 			sortProperty : "OEE_OEE",
                // 			filterProperty : "OEE_OEE",
                resizable: false
                // 			hAlign : "Center",
            }));
            oeeTable.addColumn(new sap.ui.table.Column({
                width: "105px",
                label: new sap.ui.commons.Label({
                    text: "Availability",
                    textAlign: sap.ui.core.TextAlign.Center
                }),
                template: new sap.ui.commons.TextView({
                    textAlign: sap.ui.core.TextAlign.Right
                }).bindProperty("text", "OEE_Availability", function (s) {
                    return s + "%";
                }),
                // 			sortProperty : "OEE_Availability",
                // 			filterProperty : "OEE_Availability",
                resizable: true
            }));
            oeeTable.addColumn(new sap.ui.table.Column({
                width: "105px",
                label: new sap.ui.commons.Label({
                    text: "Performance",
                    textAlign: sap.ui.core.TextAlign.Center
                }),
                template: new sap.ui.commons.TextView({
                    textAlign: sap.ui.core.TextAlign.Right
                }).bindProperty("text", "OEE_Performance", function (s) {
                    return s + "%";
                }),
                // 			sortProperty : "OEE_Performance",
                // 			filterProperty : "OEE_Performance",
                resizable: false
            }));
            oeeTable.addColumn(new sap.ui.table.Column({
                width: "105px",
                label: new sap.ui.commons.Label({
                    text: "Quality",
                    textAlign: sap.ui.core.TextAlign.Center
                }),
                template: new sap.ui.commons.TextView({
                    textAlign: sap.ui.core.TextAlign.Right
                }).bindProperty("text", "OEE_Quality", function (s) {
                    return s + "%";
                }),
                // 			sortProperty : "OEE_Quality",
                // 			filterProperty : "OEE_Quality",
                resizable: false
            }));
            // 		oeeTable.addColumn(new sap.ui.table.Column({
            // 			width : "150px",
            // 			label : new sap.ui.commons.Label({
            // 				text : "Operator"
            // 			}),
            // 			template : new sap.ui.commons.TextView().bindProperty("text", "Operator"),
            // 			// 			sortProperty : "Operator",
            // 			// 			filterProperty : "Operator",
            // 			resizable : true,
            // 		}));
            oeeTable.addColumn(new sap.ui.table.Column({
                width: "auto",
                label: new sap.ui.commons.Label({
                    text: "Description",
                    textAlign: sap.ui.core.TextAlign.Center
                }),
                template: new sap.ui.commons.TextView().bindProperty("text", "Description"),
                // 			sortProperty : "Description",
                // 			filterProperty : "Description",
                resizable: false
            }));

            // 		oeeTable.addColumn(new sap.ui.table.Column({
            // 			width : "80px",
            // 			label : new sap.ui.commons.Label({
            // 				text : "ModifiedBy"
            // 			}),
            // 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedBy"),
            // 			sortProperty : "ModifiedBy",
            // 			filterProperty : "ModifiedBy",
            // 			resizable : true,
            // 		}));
            // 		oeeTable.addColumn(new sap.ui.table.Column({
            // 			width : "150px",
            // 			label : new sap.ui.commons.Label({
            // 				text : "ModifiedOn"
            // 			}),
            // 			template : new sap.ui.commons.TextView().bindProperty("text", "ModifiedOn"),
            // 			sortProperty : "ModifiedOn",
            // 			filterProperty : "ModifiedOn",
            // 			resizable : true,
            // 		}));
            // 		oeeTable.addColumn(new sap.ui.table.Column({
            // 			width : "80px",
            // 			label : new sap.ui.commons.Label({
            // 				text : " CreatedBy"
            // 			}),
            // 			template : new sap.ui.commons.TextView().bindProperty("text", "CreatedBy"),
            // 			sortProperty : "CreatedBy",
            // 			filterProperty : "CreatedBy",
            // 			resizable : true,
            // 		}));

            // 		oeeTable.addColumn(new sap.ui.table.Column({
            // 			width : "150px",
            // 			label : new sap.ui.commons.Label({
            // 				text : "CreatedOn"
            // 			}),
            // 			template : new sap.ui.commons.TextView().bindProperty("text", "CreatedOn"),
            // 			sortProperty : "CreatedOn",
            // 			filterProperty : "CreatedOn",
            // 			resizable : true,
            // 		}));
            // 		oeeTable.addColumn(new sap.ui.table.Column({
            // 			width : "60px",
            // 			label : new sap.ui.commons.Label({
            // 				text : "Active"
            // 			}),
            // 			template : new sap.ui.commons.CheckBox().bindProperty("checked", "reasonActive", function(s) {
            // 				return s == "1";
            // 			}),
            // 			resizable : true,
            // 			hAlign : "Center",
            // 		}));

            //		sp = document.getElementById("OEEM_content").clientWidth - 200 - 190;
            oeeTable.setToolbar(new sap.ui.commons.Toolbar({
                height: "50px",
                items: [new sap.m.Label("mTableLabel", {
                    desig: sap.m.LabelDesign.Bold,
                    textAlign: sap.ui.core.TextAlign.Center,
                    text: "",
                    // 				width : "" + (document.getElementById("OEEM_content").clientWidth - 200 - 400) + "px",
                    height: "30px"
                })],
                rightItems: [
                    // 			    new sap.ui.commons.Button("btn_tbOperations_add", {
                    // 				text : "Add",
                    // 				width : "80px",
                    // 				height : "30px",
                    // 				style : "Default",
                    // 				icon : "sap-icon://add",
                    // 				lite : true,
                    // 				press : function() {
                    // 					StopReasons_add("", "add a StopReason");
                    // 				}
                    // 			}).setEnabled(true), new sap.ui.commons.Button("btn_tbOperations_edit", {
                    // 				text : "Edit",
                    // 				width : "80px",
                    // 				height : "30px",
                    // 				style : "Default",
                    // 				icon : "sap-icon://edit",
                    // 				lite : true,
                    // 				press : function() {
                    // 					StopReasons_edit("", "edit an operation", true);
                    // 				}
                    // 			}), new sap.ui.commons.Button("btn_tbOperations_delete", {
                    // 				text : "Delete",
                    // 				width : "80px",
                    // 				height : "30px",
                    // 				style : "Default",
                    // 				icon : "sap-icon://delete",
                    // 				lite : true,
                    // 				press : function() {
                    // 					StopReasons_edit("", "delete a StopReason", false);
                    // 				}
                    // 			})

                    // 			, new sap.ui.commons.MenuButton({
                    // 				height : "30px",
                    // 				width : "40px",
                    // 				//text : "",
                    // 				icon : "sap-icon://menu",
                    // 				lite : true,
                    // 				menu : new sap.ui.unified.Menu({
                    // 					title : "Operation",
                    // 					enabled : true,
                    // 					items : [ new sap.ui.commons.MenuItem("menu_tbOperations_add", {
                    // 						text : "Add",
                    // 						enabled : true,
                    // 					}), new sap.ui.commons.MenuItem("menu_tbOperations_edit", {
                    // 						text : "Edit",
                    // 						enabled : true,
                    // 					}), new sap.ui.commons.MenuItem("menu_tbOperations_delete", {
                    // 						text : "Delete",
                    // 						enabled : true,
                    // 					}) ]
                    // 				}),
                    // 				itemSelected : function(oEvent) {
                    // 					alert("menuOperationMissionitemSelected");
                    // 				}
                    // 			})
                ]
            }));
            // 		var str = location.href;
            // 		oeeTable.filter(oeeTable.getColumns()[3], location.href.substring(location.href.indexOf("FloorMaps_Index=") + 16));
            oeeTable.placeAt("p2");
        }

        //******************************************************************************************************************************************************************
        // 	function chartInit(_node) {
        // 		if (treeArray[treeIndex]['oeeStatus'] == 0) {
        // 			var chartCategories = [];

        // 			var chartSeries = [];
        // 			var dOEE = [];
        // 			getBranch(_node, chartCategories);
        // 			//_Average = [];
        // 			var dAvailability = rmData(1, chartCategories.length);
        // 			var dPerformance = rmData(1, chartCategories.length);
        // 			var dQuality = rmData(1, chartCategories.length);

        // 			// 		_Average = _random(m);
        // 			$.each(chartCategories, function(i, _chartCategories) {
        // 				if (oeeStatus(_chartCategories) == 0) {
        // 					dAvailability[i] = 0;
        // 					dPerformance[i] = 0;
        // 					dQuality[i] = 0;
        // 					dOEE.push(0);
        // 				} else {
        // 					dOEE.push(dAvailability[i] * dPerformance[i] * dQuality[i] / 10000);
        // 					//_Average.push((dAvailability[i] + dPerformance[i] + dQuality[i] + dOEE[i]) / 4);
        // 				}
        // 			});
        // 			// 			for (var i = 0; i < chartCategories.length; i++) {

        // 			// 				if (oeeStatus(chartCategories[i]) == 0) {
        // 			// 					dAvailability[i] = 0;
        // 			// 					dPerformance[i] = 0;
        // 			// 					dQuality[i] = 0;
        // 			// 					dOEE.push(0);
        // 			// 				} else {
        // 			// 					dOEE.push(dAvailability[i] * dPerformance[i] * dQuality[i] / 10000);
        // 			// 					//_Average.push((dAvailability[i] + dPerformance[i] + dQuality[i] + dOEE[i]) / 4);
        // 			// 				}

        // 			// 			}

        // 			chartSeries.push({
        // 				// 			type : 'column',
        // 				name : 'OEE',
        // 				data : dOEE,
        // 			// 			stack : 's0'
        // 			});
        // 			chartSeries.push({
        // 				// 			type : 'column',
        // 				name : 'Availability',
        // 				data : dAvailability,
        // 			// 			stack : 's1'
        // 			});
        // 			chartSeries.push({
        // 				// 			type : 'column',
        // 				name : 'Performance',
        // 				data : dPerformance,
        // 			// 			stack : 's1'
        // 			});
        // 			chartSeries.push({
        // 				// 			type : 'column',
        // 				name : 'Quality',
        // 				data : dQuality,
        // 			// 			stack : 's1'
        // 			});
        // 			creatBarChart(chartCategories, chartSeries);
        // 		} else if (treeArray[treeIndex]['oeeStatus'] == 1) {
        // 			P1 = "SELECT *";
        // 			P2 = "FROM OEEM_Data_Collection";
        // 			P3 = "WHERE UnitID=" + treeArray[treeIndex]['recordID'];
        // 			P4 = "ORDER BY Timestamp ASC";
        // 			url = "/XMII/Illuminator?QueryTemplate=OEEM/QUERIES/get_Table&Param.1=" + P1 + "&Param.2=" + P2 + "&Param.3=" + P3 + "&Param.4=" + P4 + "&ts=" + new Date().getTime() + "&Content-Type=text/xml";
        // 			getData(url, parseJsonParent);
        // 			function parseJsonParent(jsondata) {
        // 				oeeArray = [];
        // 				dOEE = [];
        // 				dAvailability = [];
        // 				dPerformance = [];
        // 				dQuality = [];
        // 				for (var i = 0; i < jsondata.length; i++) {

        // 					var tm = parseInt(jsondata[i]['Timestamp']);
        // 					availability = parseInt(jsondata[i]['OEE_Availability']);
        // 					performance = parseInt(jsondata[i]['OEE_Performance']);
        // 					quality = parseInt(jsondata[i]['OEE_Quality']);
        // 					oee = parseInt(jsondata[i]['OEE_OEE']);
        // 					dAvailability.push([ tm, availability ]);
        // 					dPerformance.push([ tm, performance ]);
        // 					dQuality.push([ tm, quality ]);
        // 					dOEE.push([ tm, oee ]);
        // 				}

        // 				chartSeries = [];

        // 				chartSeries.push({
        // 					name : 'OEE',
        // 					data : dOEE
        // 				});
        // 				chartSeries.push({
        // 					name : 'Availability',
        // 					data : dAvailability
        // 				});
        // 				chartSeries.push({
        // 					name : 'Performance',
        // 					data : dPerformance
        // 				});

        // 				chartSeries.push({
        // 					name : 'Quality',
        // 					data : dQuality
        // 				});

        // 				lineChartInit(chartSeries, 'chart title');

        // 			}
        // 		}
        // 	}

        // ******************************************************************************************************************************************************************

        function lineChartTest(_title) {
            var oeeArray = [];
            var dOEE = [];
            var dAvailability = [];
            var dPerformance = [];
            var dQuality = [];
            var n = 10;
            var tm = new Date().getTime() - n * 1000;
            for (var i = 0; i < n; i++) {
                tm += i * 1000;
                availability = 60 + Math.round((Math.random() * 40));
                performance = 60 + Math.round((Math.random() * 40));
                quality = 60 + Math.round((Math.random() * 40));
                oee = availability * performance * quality / 10000;

                dAvailability.push([tm, availability]);
                dPerformance.push([tm, performance]);
                dQuality.push([tm, quality]);
                dOEE.push([tm, oee]);
            }
            var chartSeries = [];

            chartSeries.push({
                name: 'OEE',
                data: dOEE
            });
            chartSeries.push({
                name: 'Availability',
                data: dAvailability
            });
            chartSeries.push({
                name: 'Performance',
                data: dPerformance
            });

            chartSeries.push({
                name: 'Quality',
                data: dQuality
            });
            chartReady = false;
            lineChartInit(chartSeries, _title);
        }
        // ******************************************************************************************************************************************************************
        // 	function oeeChartReady(_title) {
        // 		// 		if (_title == '2000 PREP') {
        // 		// 			cc(getNodeByText(_title));
        // 		// 		}
        // 		if (oeeChart.options.title.text != _title) {
        // 			cc('oeeChartReady 1');
        // 			return false;
        // 		}
        // 		var node = getNodeByText(oeeChart.options.title.text);
        // 		if (node.getNodes() != null) {
        // 			var ct = getChildren(node);
        // 			var drilldownseries = oeeChart.options.drilldown.series;
        // 			if (ct.length != oeeChart.series[0].data.length, ct.length != drilldownseries.length) {
        // 				cc('oeeChartReady 2');
        // 				return false;
        // 			}
        // 			$.each(ct, function(i, _ct) {
        // 				if (_ct != oeeChart.series[0].data[i].name) {
        // 					cc('oeeChartReady 3');
        // 					return false;
        // 				}
        // 			});

        // 			return true;
        // 		}
        // 		return true;
        // 	}

        // ******************************************************************************************************************************************************************
        function barChartInit(chartRoot) {
            // 		chartRoot = chartRoot;
            var _title = chartRoot.getText();
            var _subtitle = '';
            var _series = [];
            var _drilldown = [];
            //ss(_title);
            BarChart = new Highcharts.chart('p1', {

                chart: {

                    height: ScreenSize()['y'] - 365,
                    type: 'column',
                    events: {
                        redraw: function () {
                            // 						if (lastTitle != oeeChart.options.title['text']) {

                            // 							oeeChartDataLoad(getNodeByText(oeeChart.options.title['text']));
                            // 						}

                        },
                        drilldown: function (e) {
                            // 						lastTitle = oeeChart.options.title['text'];
                            // 						oeeChart.setTitle({
                            // 							text : e.seriesOptions.name
                            // 						});
//                            isDrilldown = true;

                            if (!e.seriesOptions) {
                                var chart = this;

                                //cc('e');
                                // cc(e);
                                // 							ss(e.point.name)
                                pn = e.point.name;
                                // 							lastTitle.push(BarChart.options.title['text']);
                                chart.title.update({
                                    text: e.point.name
                                });

                                var node = getNodeByText(pn);

                                if (node.getNodes().length == 0) {
                                    // 								ss('lineChartTest ?!');
                                    lineChartTest(pn);
//                                    isDrilldown = false;
                                    return;
                                }

                                // 							tts = getChildren(node);
                                oeeData = [];
                                availabilityData = [];
                                performanceData = [];
                                qualityData = [];
                                $.each(node.getNodes(), function (i, child) {
                                    oeeData.push({
                                        name: child.getText(),
                                        y: 60 + Math.round((Math.random() * 40)),
                                        drilldown: true
                                    });
                                    availabilityData.push({
                                        name: child.getText(),
                                        y: 60 + Math.round((Math.random() * 40)),
                                        drilldown: true
                                    });
                                    performanceData.push({
                                        name: child.getText(),
                                        y: 60 + Math.round((Math.random() * 40)),
                                        drilldown: true
                                    });
                                    qualityData.push({
                                        name: child.getText(),
                                        y: 60 + Math.round((Math.random() * 40)),
                                        drilldown: true
                                    });
                                });

                                if (node.getNodes()[0].getNodes().length == 0) {
                                    // 			colors: [ '#7cb5ec', '#434348', '#90ed7d', '#f7a35c', '#8085e9', '#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1' ]

                                    var OEE = {
                                        name: 'OEE',
                                        colorByPoint: false,
                                        color: '#7cb5ec',
                                        data: oeeData
                                    };
                                    var Availability = {
                                        name: 'Availability',
                                        colorByPoint: false,
                                        color: '#434348',
                                        data: availabilityData
                                    };
                                    var Performance = {
                                        name: 'Performance',
                                        colorByPoint: false,
                                        color: '#90ed7d',
                                        data: performanceData
                                    };
                                    var Quality = {
                                        name: 'Quality',
                                        colorByPoint: false,
                                        color: '#f7a35c',
                                        data: qualityData
                                    };
                                    // 									setTimeout(function() {
                                    // 										chart.hideLoading();
                                    chart.addSingleSeriesAsDrilldown(e.point, OEE);
                                    chart.addSingleSeriesAsDrilldown(e.point, Availability);
                                    chart.addSingleSeriesAsDrilldown(e.point, Performance);
                                    chart.addSingleSeriesAsDrilldown(e.point, Quality);
                                    chart.applyDrilldown();
                                } else {
                                    var OEE = {
                                        name: 'OEE',
                                        colorByPoint: true,
                                        data: oeeData
                                    };
                                    // 								var Availability = {
                                    // 									name : 'Availability',
                                    // 									colorByPoint : true,
                                    // 									data : availabilityData,
                                    // 								};
                                    // 								var Performance = {
                                    // 									name : 'Performance',
                                    // 									colorByPoint : true,
                                    // 									data : performanceData,
                                    // 								};
                                    // 								var Quality = {
                                    // 									name : 'Quality',
                                    // 									colorByPoint : true,
                                    // 									data : qualityData,
                                    // 								};
                                    // 									setTimeout(function() {
                                    // 										chart.hideLoading();
                                    chart.addSingleSeriesAsDrilldown(e.point, OEE);
                                    // 								chart.addSingleSeriesAsDrilldown(e.point, Availability);
                                    // 								chart.addSingleSeriesAsDrilldown(e.point, Performance);
                                    // 								chart.addSingleSeriesAsDrilldown(e.point, Quality);
                                    chart.applyDrilldown();

                                }
                            }
                        },
                        drillup: function (e) {

                            //cc(e);
                            // 						lastTitle = oeeChart.options.title['text'];
                            var chart = this;
                            // 						cc('drillup');
                            // 						cc(e);
                            // 						cc(findParent(e.seriesOptions.data[0].name));

                            // 						var tt = lastTitle.pop();
                            // 						ss(tt);
                            chart.setTitle({
                                text: findParent(getNodeByText(e.seriesOptions.data[0].name)).getText()
                            });
                            isDrilldown = false;
                            // 						ss(oeeChart.series.length);
                            // 						oeeChart.series[0].remove(true);
                            // 						setTimeout(function() {
                            // 							// 							chart.hideLoading();
                            // // 							chart.addSeriesAsDrilldown(e.point, series);
                            // 						}, 1000);

                        }
                    }
                },
                credits: {
                    enabled: false,
                    href: 'http://www.rtsperfectplant.com/',
                    position: {
                        align: 'right',
                        x: -10,
                        verticalAlign: 'bottom',
                        y: -5
                    },

                    style: {
                        cursor: 'pointer',
                        color: '#999999',
                        fontSize: '9px'
                    },

                    text: 'RTS Consulting Inc.'
                },
                // 			xAxis : {
                // 				categories : []
                // 			},
                xAxis: {
                    type: 'category'
                },
                yAxis: {
                    max: 100,
                    title: {
                        text: 'yAxis',
                        enabled: false
                    }
                },

                exporting: {
                    enabled: false
                },

                title: {
                    text: _title
                },
                // 			subtitle : {
                // 				text : 'Click the columns to view versions. Source: <a href="http://rtsautomation.com">rtsautomation.com</a>.'
                // 			},

                subtitle: {
                    text: ''
                },

                legend: {
                    align: "right",
                    // 					backgroundColor: undefined
                    // 					borderColor: "#999999"
                    // 					borderRadius: 0
                    // 					borderWidth: 0
                    enabled: false,
                    // 					floating: false
                    // 					itemDistance: 20
                    // 					itemHiddenStyle: { "color": "#cccccc" }
                    // 					itemHoverStyle: { "color": "#000000" }
                    // 					itemMarginBottom: 0
                    // 					itemMarginTop: 0
                    // 					itemStyle: { "color": "#333333", "cursor": "pointer", "fontSize": "12px", "fontWeight": "bold" }
                    // 					itemWidth: undefined
                    // 					labelFormat: "{name}"
                    // 					labelFormatter: undefined
                    // 					layout: "horizontal"
                    // 					lineHeight: 16
                    // 					margin: 12
                    // 					maxHeight: undefined
                    // 					navigation: {…}
                    // 					padding: 8
                    // 					reversed: false
                    // 					rtl: false
                    // 					shadow: false
                    // 					squareSymbol: true
                    // 					style: undefined
                    // 					symbolHeight: undefined
                    // 					symbolPadding: 5
                    // 					symbolRadius: undefined
                    // 					symbolWidth: undefined
                    // 					title: {…}
                    // 					useHTML: false
                    verticalAlign: "center"
                    // 					width: undefined
                    // 					x: 0
                    // 					y: 0
                },

                // 			series : [ {
                // 				name : 'OEE',
                // 				colorByPoint : true,
                // 				data : [ {
                // 					name : 'dp1',
                // 					y : 60 + Math.round((Math.random() * 40)),
                // 					drilldown : true
                // 				} ]
                // 			}, {
                // 				name : 'Availability',
                // 				colorByPoint : true,
                // 				data : [ {
                // 					name : 'dp1',
                // 					y : 60 + Math.round((Math.random() * 40)),
                // 					drilldown : true
                // 				} ]
                // 			}, {
                // 				name : 'Performance',
                // 				colorByPoint : true,
                // 				data : [ {
                // 					name : 'dp1',
                // 					y : 60 + Math.round((Math.random() * 40)),
                // 					drilldown : true
                // 				} ]
                // 			}, {
                // 				name : 'Quality',
                // 				colorByPoint : true,
                // 				data : [ {
                // 					name : 'dp1',
                // 					y : 60 + Math.round((Math.random() * 40)),
                // 					drilldown : true
                // 				} ]
                // 			} ],
                series: [],
                drilldown: {
                    series: []
                },

                lang: {
//                    drillUpText: " << Back to {series.name}"
                    drillUpText: " << Back"
                },
                plotOptions: {
                    column: {
                        // 					stacking : 'normal',
                        pointPadding: 0,
                        borderWidth: 0
                    },
                    series: {
                        colorByPoint: true,
                        dataLabels: {
                            enabled: false
                        }
                    }
                }
            });
            // 		lastTitle = _title;

            // 		oeeChartReady = false;
            // 		oeeChart.subtitle.update({
            // 			text : 'data retrieval ...'
            // 		});
            // 		oeeChartReady = true;
            // 		return;
            // 		cc('0');
            // 		cc(oeeChart);
            // 		return;

            // 		drilldownseries = oeeChart.options.drilldown.series;

            // 		var sid = getChildren(chartRoot);
            // 		var Nodes = chartRoot.getNodes();

            var aOEE = [];
            var aAvailability = [];
            var aPerformance = [];
            var aQuality = [];

            // 		$.each(drilldownseries, function(i, _drilldownseries) {
            // 			drilldownseries.pop();
            // 		});
            // 		cc('1');
            // 		cc(oeeChart);
            // 		chartSeriesDatas0 = [];
            // 		chartSeriesDatas1 = [];
            // 		chartSeriesDatas2 = [];
            // 		chartSeriesDatas3 = [];
            $.each(chartRoot.getNodes(), function (i, Node) {

                aOEE.push({
                    name: Node.getText(),
                    y: 60 + Math.round((Math.random() * 40)),
                    drilldown: true
                });
                aAvailability.push({
                    name: Node.getText(),
                    y: 60 + Math.round((Math.random() * 40)),
                    drilldown: true
                });
                aPerformance.push({
                    name: Node.getText(),
                    y: 60 + Math.round((Math.random() * 40)),
                    drilldown: true
                });
                aQuality.push({
                    name: Node.getText(),
                    y: 60 + Math.round((Math.random() * 40)),
                    drilldown: true
                });

                // 			if (getNodeByText(_sid).getNodes().length > 0) {
                // 				var dsid = getChildren(getNodeByText(_sid));
                // 				var dsidData = [];
                // 				$.each(dsid, function(i, _dsid) {
                // 					dsidData.push([ _dsid,
                // 							60 + Math.round((Math.random() * 40)) ]);
                // 				});

                // 				drilldownseries.push({
                // 					name : _sid,
                // 					id : _sid,
                // 					data : dsidData,

                // 				});
                // 			}
            });

            // 		ss(chartSeriesDatas0.length);
            // 		ss(chartSeriesDatas1.length);
            // 		ss(chartSeriesDatas2.length);
            // 		ss(chartSeriesDatas3.length);
            // 		BarChart.series[0].setData(aOEE);

            // 		BarChart.series[1].setData(aAvailability);
            // 		BarChart.series[2].setData(aPerformance);
            // 		BarChart.series[3].setData(aQuality);
            // 		ss();
            if (chartRoot.getNodes()[0].getNodes().length > 0) {

                BarChart.addSeries({
                    name: 'OEE',
                    colorByPoint: true,
                    data: aOEE
                });
            } else {
                // 			colors: [ '#7cb5ec', '#434348', '#90ed7d', '#f7a35c', '#8085e9', '#f15c80', '#e4d354', '#2b908f', '#f45b5b', '#91e8e1' ]

                BarChart.addSeries({
                    name: 'OEE',
                    color: '#7cb5ec',
                    colorByPoint: false,
                    data: aOEE
                });
                BarChart.addSeries({
                    name: 'Availability',
                    color: '#434348',
                    colorByPoint: false,
                    data: aAvailability
                });
                BarChart.addSeries({
                    name: 'Performanc',
                    color: '#90ed7d',
                    colorByPoint: false,
                    data: aPerformance
                });
                BarChart.addSeries({
                    name: 'Quality',
                    color: '#f7a35c',
                    colorByPoint: false,
                    data: aQuality
                });
            }
            // 		oeeChart.series.isDirty = true;
            // 		oeeChart.redraw();

            // 		cc('99');
            // 		cc(BarChart);
            ChartType = 'BAR';
            LineChart = null;
            chartReady = true;
            // 		return;

            // 		oeeChart.series[1].setData(chartSeriesDatas1);
            // 		oeeChart.series[2].setData(chartSeriesDatas2);
            // 		oeeChart.series[3].setData(chartSeriesDatas3);
            // 		oeeChartDataLoad(chartRoot);

        }

        // ******************************************************************************************************************************************************************
        // 	function oeeChartDataLoad(_node) {
        // 		return;
        // 		var _title = _node.getText();

        // 		drilldownseries = oeeChart.options.drilldown.series;

        // 		var sid = getChildren(_node);

        // 		// 		$.each(chartSeriesDatas0, function(i, _chartSeriesDatas) {
        // 		// 			chartSeriesDatas0.pop();
        // 		// 		});

        // 		$.each(drilldownseries, function(i, _drilldownseries) {
        // 			drilldownseries.pop();
        // 		});
        // 		// 		return true;
        // 		$.each(sid, function(i, _sid) {

        // 			if (getNodeByText(_sid).getNodes().length > 0) {
        // 				var dsid = getChildren(getNodeByText(_sid));
        // 				var dsidData = [];
        // 				$.each(dsid, function(i, _dsid) {
        // 					dsidData.push({
        // 						name : _dsid,
        // 						y : 60 + Math.round((Math.random() * 40)),
        // 						drilldown : _dsid
        // 					});
        // 				});

        // 				drilldownseries.push({
        // 					name : _sid,
        // 					id : _sid,
        // 					data : dsidData,

        // 				});

        // 			} else {
        // 				var _dsid = getNodeByText(_sid).getText();
        // 				var dsidData = [];
        // 				for (var i = 0; i < 4; i++) {
        // 					dsidData.push({
        // 						name : _dsid + '_' + i,
        // 						y : 60 + Math.round((Math.random() * 40)),
        // 					});
        // 				}

        // 				drilldownseries.push({
        // 					name : _dsid,
        // 					id : _dsid,
        // 					data : dsidData,

        // 				});
        // 			}

        // 		});

        // 		// 		oeeChart.series[0].setData(chartSeriesDatas0);

        // 		// 		chartReady = false;

        // 	}
        // ******************************************************************************************************************************************************************
        // 	function creatAreaChart(_categories, _series) {

        // 		Highcharts.chart('p1', {
        // 			credits : {
        // 				enabled : true,
        // 				href : 'http://www.rtsperfectplant.com/',
        // 				position : {
        // 					align : 'right',
        // 					x : -10,
        // 					verticalAlign : 'bottom',
        // 					y : -5
        // 				},

        // 				style : {
        // 					cursor : 'pointer',
        // 					color : '#999999',
        // 					fontSize : '9px'
        // 				},

        // 				text : 'RTS Consulting Inc.'
        // 			},
        // 			chart : {
        // 				type : 'area'
        // 			},

        // 			title : {
        // 				text : 'Overall Equipment Effectiveness Dashboard'
        // 			},
        // 			xAxis : {
        // 				categories : _categories
        // 			},
        // 			yAxis : {
        // 				title : {
        // 					text : 'yAxis',
        // 					enabled : false,
        // 				}
        // 			},
        // 			exporting : {
        // 				enabled : false
        // 			},
        // 			plotOptions : {
        // 				column : {
        // 					stacking : 'normal',
        // 					pointPadding : 0,
        // 					borderWidth : 0
        // 				},
        // 				series : {
        // 					colorByPoint : true
        // 				}
        // 			},
        // 			plotOptions : {
        // 				area : {
        // 					stacking : 'percent',
        // 					lineColor : '#ffffff',
        // 					lineWidth : 1,
        // 					marker : {
        // 						lineWidth : 1,
        // 						lineColor : '#ffffff'
        // 					}
        // 				}
        // 			},
        // 			// 			labels : {
        // 			// 				items : [ {
        // 			// 					html : 'O E E M',
        // 			// 					style : {
        // 			// 						left : '50px',
        // 			// 						top : '18px',
        // 			// 						color : (Highcharts.theme && Highcharts.theme.textColor) || 'black'
        // 			// 					}
        // 			// 				} ]
        // 			// 			},
        // 			series : _series,
        // 			legend : {
        // 				align : "right",
        // 				// 					backgroundColor: undefined
        // 				// 					borderColor: "#999999"
        // 				// 					borderRadius: 0
        // 				// 					borderWidth: 0
        // 				enabled : false,
        // 				// 					floating: false
        // 				// 					itemDistance: 20
        // 				// 					itemHiddenStyle: { "color": "#cccccc" }
        // 				// 					itemHoverStyle: { "color": "#000000" }
        // 				// 					itemMarginBottom: 0
        // 				// 					itemMarginTop: 0
        // 				// 					itemStyle: { "color": "#333333", "cursor": "pointer", "fontSize": "12px", "fontWeight": "bold" }
        // 				// 					itemWidth: undefined
        // 				// 					labelFormat: "{name}"
        // 				// 					labelFormatter: undefined
        // 				// 					layout: "horizontal"
        // 				// 					lineHeight: 16
        // 				// 					margin: 12
        // 				// 					maxHeight: undefined
        // 				// 					navigation: {…}
        // 				// 					padding: 8
        // 				// 					reversed: false
        // 				// 					rtl: false
        // 				// 					shadow: false
        // 				// 					squareSymbol: true
        // 				// 					style: undefined
        // 				// 					symbolHeight: undefined
        // 				// 					symbolPadding: 5
        // 				// 					symbolRadius: undefined
        // 				// 					symbolWidth: undefined
        // 				// 					title: {…}
        // 				// 					useHTML: false
        // 				verticalAlign : "center",
        // 			// 					width: undefined
        // 			// 					x: 0
        // 			// 					y: 0
        // 			}
        // 		});

        // 	}

        function lineChartInit(_series, _title) {
            // 		BarChart = null;
            LineChart = new Highcharts.stockChart('p1', {
                credits: {
                    enabled: false,
                    href: 'http://www.rtsperfectplant.com/',
                    position: {
                        align: 'right',
                        x: -10,
                        verticalAlign: 'bottom',
                        y: -5
                    },

                    style: {
                        cursor: 'pointer',
                        color: '#999999',
                        fontSize: '9px'
                    },

                    text: 'RTS Consulting Inc.'
                },
                title: {
                    text: _title
                },
                subtitle: {
                    text: 'OEE/Availability/Performance/Quality',
                    floating: false,
                    align: 'center',
                    y: 40,
                    style: {
                        fontSize: '14px'
                    }
                },

                chart: {

                    type: 'spline',
                    height: ScreenSize()['y'] - 365,
                    events: {
                        load: function () {
                            // 					alert('load');

                        }
                    }
                },
                colors: ['#90ed7d', '#7cb5ec', '#f7a35c', '#888888'],
                legend: {
                    enabled: true,
                    align: "center",
                    verticalAlign: "bottom",
                    shadow: false
                },
                rangeSelector: {
                    buttons: [{
                        type: 'minute',
                        count: 1,
                        text: 'm.'
                    }, {
                        type: 'hour',
                        count: 1,
                        text: 'H'
                    }, {
                        type: 'hour',
                        count: 8,
                        text: 'S'
                    }, {
                        type: 'day',
                        count: 1,
                        text: 'D'
                    }, {
                        type: 'week',
                        count: 1,
                        text: 'W'
                    }, {
                        type: 'month',
                        count: 1,
                        text: 'M'
                    }, {
                        type: 'month',
                        count: 3,
                        text: 'Q'
                    }, {
                        type: 'year',
                        count: 12,
                        text: 'Y'
                    }, {
                        type: 'all',
                        text: 'All'
                    }],
                    selected: 7
                },

                yAxis: {
                    min: 0,
                    max: 100,
                    title: {
                        text: 'yAxis',
                        enabled: false
                    },
                    labels: {
                        formatter: function () {
                            return (this.value > 0 ? ' + ' : '') + this.value + '%';
                        }
                    },
                    plotLines: [{
                        value: 0,
                        width: 2,
                        color: 'silver'
                    }]
                },

                tooltip: {
                    pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> (%)<br/>',
                    valueDecimals: 2,
                    split: false
                },
                navigator: {
                    enabled: true
                },
                series: _series
            });

            ChartType = 'LINE';
            // 		ChartType = 'BAR';
            BarChart = null;
            chartReady = true;
        }

        // 	function creatLineChart(_series) {
        // 		hChart = new Highcharts.stockChart('p1', {
        // 			credits : {
        // 				enabled : true,
        // 				href : 'http://www.rtsperfectplant.com/',
        // 				position : {
        // 					align : 'right',
        // 					x : -10,
        // 					verticalAlign : 'bottom',
        // 					y : -5
        // 				},

        // 				style : {
        // 					cursor : 'pointer',
        // 					color : '#999999',
        // 					fontSize : '9px'
        // 				},

        // 				text : 'RTS Consulting Inc.'
        // 			},
        // 			title : {
        // 				text : 'OEE_%'
        // 			},
        // 			subtitle : {
        // 				text : 'Availability_%_Performance_%_Quality_%',
        // 				floating : false,
        // 				align : 'center',
        // 				y : 40,
        // 				style : {
        // 					fontSize : '14px'
        // 				}
        // 			},

        // 			chart : {

        // 				type : 'spline',
        // 				height : "500",
        // 				events : {
        // 					load : function() {
        // 						// 					alert('load');

        // 					}
        // 				}
        // 			},
        // 			colors : [ '#90ed7d', '#7cb5ec', '#f7a35c', '#888888' ],
        // 			legend : {
        // 				enabled : true,
        // 				align : "center",
        // 				verticalAlign : "bottom",
        // 				shadow : false,
        // 			},
        // 			rangeSelector : {
        // 				buttons : [ {
        // 					type : 'minute',
        // 					count : 1,
        // 					text : 'm.'
        // 				}, {
        // 					type : 'hour',
        // 					count : 1,
        // 					text : 'H'
        // 				}, {
        // 					type : 'hour',
        // 					count : 8,
        // 					text : 'S'
        // 				}, {
        // 					type : 'day',
        // 					count : 1,
        // 					text : 'D'
        // 				}, {
        // 					type : 'week',
        // 					count : 1,
        // 					text : 'W'
        // 				}, {
        // 					type : 'month',
        // 					count : 1,
        // 					text : 'M'
        // 				}, {
        // 					type : 'month',
        // 					count : 3,
        // 					text : 'Q'
        // 				}, {
        // 					type : 'year',
        // 					count : 12,
        // 					text : 'Y'
        // 				}, {
        // 					type : 'all',
        // 					text : 'All'
        // 				} ],
        // 				selected : 7
        // 			},

        // 			yAxis : {
        // 				title : {
        // 					text : 'yAxis',
        // 					enabled : false,
        // 				},
        // 				labels : {
        // 					formatter : function() {
        // 						return (this.value > 0 ? ' + ' : '') + this.value + '%';
        // 					}
        // 				},
        // 				plotLines : [ {
        // 					value : 0,
        // 					width : 2,
        // 					color : 'silver'
        // 				} ]
        // 			},

        // 			tooltip : {
        // 				pointFormat : '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> (%)<br/>',
        // 				valueDecimals : 2,
        // 				split : false
        // 			},
        // 			navigator : {
        // 				enabled : true
        // 			},
        // 			series : _series
        // 		});
        // 	}
        // ******************************************************************************************************************************************************************

        function rmData(n, m) {
            var aData = [];
            if (n == 1) {
                for (var i = 0; i < m; i++) {
                    aData.push(60 + Math.round((Math.random() * 40)));
                }
            } else if (n == 2) {
                var ts = Math.round((new Date().getTime() - n * 1000) / 1000) * 1000;
                for (var i = 0; i < m; i++) {
                    aData.push([ts + i * 60 * 1000, 45 + Math.round((Math.random() * 55))]);
                }
            }
            return aData;
        }

        function ss(_string) {
            alert(_string);
        }
        function cc(_object) {

            console.log(_object);
        }
    </script>

</head>


<body>

<input id="user_roles" type="hidden" value="{IllumLoginRoles}"
       style="display: block; width: 1000px;" readonly/>
<input id="user_role" type="hidden" value="{ROLE}"
       style="display: block; width: 1000px;" readonly/>
<input id="user_name" type="hidden" value="{IllumLoginName}"
       style="display: block; width: 1000px;" readonly/>
<input id="user_height" type="hidden" value="{HEIGHT}"
       style="display: block; width: 100px;" readonly/>
<input id="user_address" type="hidden" value="{Machine}"
       style="display: block; width: 1000px;" readonly/>

<div id="container" class="container">

    <header id="header"></header>
    <menu id="menu"></menu>
    <nav id="nav"></nav>
    <!--<button id="test1">1</button>-->
    <!--<button id="test2">2</button>-->
    <!--<button id="test3">3</button>-->
    <article id="article">
        <div id="p1"></div>
        <div id="p2"></div>
    </article>
    <footer id="footer"></footer>
</div>

</body>


</html>

